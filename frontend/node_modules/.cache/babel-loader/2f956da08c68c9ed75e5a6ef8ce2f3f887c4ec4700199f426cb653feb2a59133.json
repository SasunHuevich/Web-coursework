{"ast":null,"code":"export default {\n  name: \"NavBar\",\n  data() {\n    return {};\n  },\n  computed: {\n    // вычисляемые свойства\n    currentUser() {\n      return this.$store.state.auth.user;\n    }\n  },\n  methods: {\n    logOut() {\n      this.$store.dispatch('auth/logout'); // обращаемся к методу logout, который определён в auth.service.js\n      window.location.href = '/login'; // // Используем такую конструкцию, а не this.$router.push, так как требуется перезагрузить страницу для обновления локального хранилища\n    }\n  }\n};","map":{"version":3,"names":["name","data","computed","currentUser","$store","state","auth","user","methods","logOut","dispatch","window","location","href"],"sources":["C:\\Users\\Samedi\\Documents\\SecondProject\\SecondProject\\frontend\\src\\components\\Navbar.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <nav class=\"navbar navbar-light px-4\" style=\"background-color: #CFD0F0;\">\r\n      <div class=\"navbar-brand\">\r\n        <img src=\"../../assets/logo.png\" class=\"logo\" alt=\"логотип\">\r\n        <router-link class=\"item quiz-link\" to=\"/quizList\">Викторины</router-link>\r\n        <router-link class=\"item quiz-link\" to=\"/addQuiz1\">Создать викторину</router-link>\r\n        <router-link class=\"item quiz-link\" to=\"/MyQuiz\">Мои викторины</router-link>\r\n      </div>\r\n      <div v-if=\"currentUser\">\r\n        <router-link class=\"item navbar-brand\" to=\"/profile\">\r\n          {{ currentUser.username }}\r\n        </router-link>\r\n        <a class=\"item navbar-brand\" href @click.prevent=\"logOut\">\r\n          Выйти\r\n        </a>\r\n      </div>\r\n      <div v-else>\r\n        <router-link class=\"item navbar-brand\" to=\"/login\">\r\n          Войти\r\n        </router-link>\r\n      </div>\r\n    </nav>\r\n    <div style=\"margin-top: 20px;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n    name: \"NavBar\",\r\n    data() {\r\n        return {};\r\n\r\n    },\r\n    computed: { // вычисляемые свойства\r\n        currentUser() {\r\n            return this.$store.state.auth.user;\r\n        }\r\n    },\r\n    methods: {\r\n        logOut() {\r\n            this.$store.dispatch('auth/logout'); // обращаемся к методу logout, который определён в auth.service.js\r\n            window.location.href = '/login'; // // Используем такую конструкцию, а не this.$router.push, так как требуется перезагрузить страницу для обновления локального хранилища\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style>\r\n  .navbar {\r\n    display: flex; /* Flexbox для навигационной панели */\r\n    justify-content: space-between; /* Распределяем элементы по краям */\r\n    align-items: center; /* Выравниваем элементы по центру по вертикали */\r\n  }\r\n\r\n  .navbar-brand {\r\n    display: flex; /* Flexbox для логотипа и надписи \"Квизы\" */\r\n    align-items: center; /* Выравниваем элементы по вертикали по центру */\r\n  }\r\n\r\n  .item {\r\n    margin-left: 10px; /* Отступ между логотипом и надписью \"Квизы\" */\r\n    text-decoration: none; /* Убираем подчеркивание у ссылки */\r\n    color: inherit; /* Унаследовать цвет от родителя */\r\n  }\r\n\r\n  .logo {\r\n    width: 70px;\r\n    height: auto;\r\n  }\r\n\r\n  .quiz-link {\r\n    margin-left: 20px; /* Установите желаемый отступ */\r\n}\r\n</style>"],"mappings":"AA6BI,eAAe;EACfA,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACH,OAAO,CAAC,CAAC;EAEb,CAAC;EACDC,QAAQ,EAAE;IAAE;IACRC,WAAWA,CAAA,EAAG;MACV,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI;IACtC;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,MAAMA,CAAA,EAAG;MACL,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,aAAa,CAAC,EAAE;MACrCC,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,QAAQ,EAAE;IACrC;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}