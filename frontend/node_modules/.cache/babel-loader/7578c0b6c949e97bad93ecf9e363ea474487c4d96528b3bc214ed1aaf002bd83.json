{"ast":null,"code":"import http from \"../../http-common\"; // подключение объекта, который позволяет отправлять запросы серверу\nexport default {\n  name: \"ListStudentGroups\",\n  // Имя шаблона\n  data() {\n    // данные компонента (определение переменных)\n    return {\n      studentGroups: []\n    };\n  },\n  methods: {\n    // методы компонента\n    getStudentGroups() {\n      http.get(\"/listStudentGroups\") // обращаемся к серверу для получения списка студенческих групп\n      .then(response => {\n        // запрос выполнен успешно\n        this.studentGroups = response.data;\n      }).catch(e => {\n        // запрос выполнен с ошибкой\n        console.log(e);\n      });\n    }\n  },\n  mounted() {\n    // загружаем данные студенческих групп. Обработчик mounted() вызывается после монтирования экземпляра шаблона\n    this.getStudentGroups();\n  }\n};","map":{"version":3,"names":["http","name","data","studentGroups","methods","getStudentGroups","get","then","response","catch","e","console","log","mounted"],"sources":["C:\\Users\\Samedi\\Documents\\SecondProject\\SecondProject\\frontend\\src\\components\\studentGroup\\ListStudentGroups.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h4>Список студенческих групп</h4>\r\n      <ul class=\"list-group mt-3\">\r\n        <li class=\"list-group-item\" v-for=\"(studentGroup, index) in studentGroups\" :key=\"index\">\r\n          <router-link :to=\"{\r\n            name: 'studentGroup-details',\r\n            params: { id: studentGroup.id }\r\n          }\">\r\n            {{studentGroup.name}}\r\n          </router-link>\r\n        </li>\r\n      </ul>\r\n        <router-link class=\"item btn btn-success\" to=\"/addStudentGroup\">Добавить студенческую группу</router-link>\r\n    </div>\r\n</template>\r\n  \r\n  <script>\r\n  import http from \"../../http-common\"; // подключение объекта, который позволяет отправлять запросы серверу\r\n  export default {\r\n    name: \"ListStudentGroups\", // Имя шаблона\r\n    data() { // данные компонента (определение переменных)\r\n      return {\r\n        studentGroups: []\r\n      };\r\n    },\r\n    methods: { // методы компонента\r\n      getStudentGroups() {\r\n        http\r\n            .get(\"/listStudentGroups\") // обращаемся к серверу для получения списка студенческих групп\r\n            .then(response => { // запрос выполнен успешно\r\n              this.studentGroups = response.data;\r\n            })\r\n            .catch(e => { // запрос выполнен с ошибкой\r\n              console.log(e);\r\n            });\r\n      }\r\n    },\r\n    mounted() { // загружаем данные студенческих групп. Обработчик mounted() вызывается после монтирования экземпляра шаблона\r\n      this.getStudentGroups();\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  \r\n  </style>"],"mappings":"AAkBE,OAAOA,IAAG,MAAO,mBAAmB,EAAE;AACtC,eAAe;EACbC,IAAI,EAAE,mBAAmB;EAAE;EAC3BC,IAAIA,CAAA,EAAG;IAAE;IACP,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IAAE;IACTC,gBAAgBA,CAAA,EAAG;MACjBL,IAAG,CACEM,GAAG,CAAC,oBAAoB,EAAE;MAAA,CAC1BC,IAAI,CAACC,QAAO,IAAK;QAAE;QAClB,IAAI,CAACL,aAAY,GAAIK,QAAQ,CAACN,IAAI;MACpC,CAAC,EACAO,KAAK,CAACC,CAAA,IAAK;QAAE;QACZC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAChB,CAAC,CAAC;IACR;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IAAE;IACV,IAAI,CAACR,gBAAgB,CAAC,CAAC;EACzB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}