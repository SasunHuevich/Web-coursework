{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Список учебных дисциплин\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"list-group mt-3\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", _hoisted_2, [_createCommentVNode(\" Вывод списка учебных дисциплин \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.disciplines, (discipline, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"list-group-item\",\n      key: index\n    }, [_createVNode(_component_router_link, {\n      to: {\n        name: 'discipline-details',\n        params: {\n          id: discipline.id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(discipline.name), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.displayContent ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_router_link, {\n    class: \"item btn btn-success\",\n    to: \"/addDiscipline\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Добавить учебную дисциплину\")]),\n    _: 1 /* STABLE */\n  })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" Добавление доступно только авторизованным пользователям \"))]);\n}","map":{"version":3,"names":["_createElementVNode","class","key","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_Fragment","_renderList","$data","disciplines","discipline","index","_createVNode","_component_router_link","to","id","default","_withCtx","_createTextVNode","_toDisplayString","name","_","displayContent","_hoisted_3","_hoisted_4"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\discipline\\ListDisciplines.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h4>Список учебных дисциплин</h4>\r\n    <ul class=\"list-group mt-3\">\r\n      <!-- Вывод списка учебных дисциплин -->\r\n      <li class=\"list-group-item\" v-for=\"(discipline, index) in disciplines\" :key=\"index\">\r\n        <router-link :to=\"{\r\n          name: 'discipline-details',\r\n          params: { id: discipline.id }\r\n        }\">\r\n          {{discipline.name}}\r\n        </router-link>\r\n      </li>\r\n    </ul>\r\n    <div v-if=\"displayContent\">\r\n      <router-link class=\"item btn btn-success\" to=\"/addDiscipline\">Добавить учебную дисциплину</router-link>\r\n    </div>  \r\n      <div v-else>\r\n        Добавление доступно только авторизованным пользователям\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"../../http-common\"; // подключение объекта, который позволяет отправлять запросы серверу\r\nimport UserService from '../../services/user.service';\r\nexport default {\r\n  name: \"ListDisciplines\", // Имя шаблона\r\n  data() { // данные компонента (определение переменных)\r\n    return {\r\n      disciplines: [],\r\n      displayContent: false //по умолчанию скрываем контент\r\n    };\r\n  },\r\n  methods: { // методы компонента\r\n    getDisciplines() {\r\n      http\r\n          .get(\"/listDisciplines\") // обращаемся к серверу для получения списка учебных дисциплин\r\n          .then(response => { // запрос выполнен успешно\r\n            this.disciplines = response.data;\r\n          })\r\n          .catch(e => { // запрос выполнен с ошибкой\r\n            console.log(e);\r\n          });\r\n    }\r\n  },\r\n  mounted() { // загружаем данные учебных дисциплин. Обработчик mounted() вызывается после монтирования экземпляра шаблона\r\n    UserService.getUserBoard()\r\n          .then(() => {\r\n            this.displayContent = true;\r\n          })\r\n          .catch(e => {\r\n                this.content =\r\n                    (e.response && e.response.data) ||\r\n                    e.message ||\r\n                    e.toString();\r\n              }\r\n          );\r\n    this.getDisciplines();\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";gCAEIA,mBAAA,CAAiC,YAA7B,0BAAwB;;EACxBC,KAAK,EAAC;AAAiB;;EAH/BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;uBACEC,mBAAA,CAmBM,cAlBJC,UAAiC,EACjCJ,mBAAA,CAUK,MAVLK,UAUK,GATHC,mBAAA,oCAAuC,G,kBACvCH,mBAAA,CAOKI,SAAA,QAZXC,WAAA,CAKgEC,KAAA,CAAAC,WAAW,EAL3E,CAK0CC,UAAU,EAAEC,KAAK;yBAArDT,mBAAA,CAOK;MAPDF,KAAK,EAAC,iBAAiB;MAA6CC,GAAG,EAAEU;QAC3EC,YAAA,CAKcC,sBAAA;MALAC,EAAE;;;cAAoEJ,UAAU,CAACK;QAAE;;;MANzGC,OAAA,EAAAC,QAAA,CAUU,MAAmB,CAV7BC,gBAAA,CAAAC,gBAAA,CAUYT,UAAU,CAACU,IAAI,iB;MAV3BC,CAAA;;oCAceb,KAAA,CAAAc,cAAc,I,cAAzBpB,mBAAA,CAEM,OAhBVqB,UAAA,GAeMX,YAAA,CAAuGC,sBAAA;IAA1Fb,KAAK,EAAC,sBAAsB;IAACc,EAAE,EAAC;;IAfnDE,OAAA,EAAAC,QAAA,CAeoE,MAA2B,CAf/FC,gBAAA,CAeoE,6BAA2B,E;IAf/FG,CAAA;yBAiBMnB,mBAAA,CAEI,OAnBVsB,UAAA,EAiBkB,2DAEd,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}