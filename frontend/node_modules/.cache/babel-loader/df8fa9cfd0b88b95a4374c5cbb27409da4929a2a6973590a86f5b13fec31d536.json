{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Студенческая группа\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"col-md-5\"\n};\nconst _hoisted_4 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group mb-3\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"btn btn-info\",\n  type: \"submit\",\n  value: \"Обновить\"\n})], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 1,\n  class: \"col-md-5\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Вы успешно обновили запись\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Выберите студенческую группу\", -1 /* HOISTED */);\nconst _hoisted_11 = [_hoisted_9, _hoisted_10];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return this.studentGroup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, !$data.submitted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = (...args) => $options.updateStudentGroup && $options.updateStudentGroup(...args))\n  }, [_createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control\",\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    placeholder: \"Название учебной группы\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.studentGroup.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.studentGroup.name]])]), _hoisted_5], 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    class: \"btn btn-danger\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.deleteStudentGroup())\n  }, \"Удалить\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_hoisted_7, _createVNode(_component_router_link, {\n    to: \"/listStudentGroups\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Вернуться к списку студенческих групп\")]),\n    _: 1 /* STABLE */\n  })]))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [..._hoisted_11]));\n}","map":{"version":3,"names":["key","_createElementVNode","class","type","value","_hoisted_9","_hoisted_10","studentGroup","_createElementBlock","_hoisted_1","_hoisted_2","$data","submitted","_hoisted_3","onSubmit","_cache","args","$options","updateStudentGroup","_hoisted_4","name","id","placeholder","required","$event","_hoisted_5","onClick","deleteStudentGroup","_hoisted_6","_hoisted_7","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","_hoisted_8","_hoisted_11"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\studentGroup\\StudentGroup.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"this.studentGroup\">\r\n        <h4>Студенческая группа</h4>\r\n        <div class=\"col-md-5\" v-if=\"!submitted\">\r\n            <form @submit=\"updateStudentGroup\">\r\n                <div class=\"form-group mb-3\"><input class=\"form-control\" type=\"text\" name=\"name\" id=\"name\" placeholder=\"Название учебной группы\" required v-model=\"studentGroup.name\"></div>\r\n                <div class=\"form-group mb-3\"><input class=\"btn btn-info\" type=\"submit\" value=\"Обновить\"></div>\r\n            </form>\r\n            <button class=\"btn btn-danger\" v-on:click=\"deleteStudentGroup()\">Удалить</button>\r\n        </div>\r\n        <div class=\"col-md-5\" v-else>\r\n            <h4>Вы успешно обновили запись</h4>\r\n            <router-link to=\"/listStudentGroups\">Вернуться к списку студенческих групп</router-link>\r\n        </div>\r\n    </div>\r\n    <div v-else>\r\n        <br>\r\n        <p>Выберите студенческую группу</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    export default {\r\n        name: \"studentGroup-details\",\r\n        props: ['id'],\r\n        data() {\r\n            return {\r\n                studentGroup: null,\r\n                submitted: false\r\n            };\r\n        },\r\n        methods: {\r\n            getStudentGroup() {\r\n                http\r\n                    .get(\"/studentGroup/\" + this.id) // обращаемся к серверу для получения данных студенческой группы, id взят из входных параметров (props)\r\n                    .then(response => { // запрос выполнен успешно\r\n                        this.studentGroup = response.data;\r\n                    })\r\n                    .catch(e => { // запрос выполнен с ошибкой\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            updateStudentGroup(e) {\r\n                e.preventDefault(); // запрет отправки формы, так как обрабатывать будем с помощью методов axios\r\n                var data = {\r\n                    name: this.studentGroup.name\r\n                };\r\n\r\n                http\r\n                    .post(\"/updateStudentGroup/\" + this.studentGroup.id, data)\r\n                    .then(() => { // при успешном обновлении можно добавить, например, вывод уведомления\r\n                        this.$router.push('/listStudentGroups'); // переходим к списку учебных дисциплин\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n                this.submitted = true;\r\n            },\r\n            deleteStudentGroup() {\r\n                http\r\n                    .post(\"/deleteStudentGroup/\" + this.studentGroup.id)\r\n                    .then(() => {\r\n                        // переходим к списку студенческих групп (переход по ссылкам программно)\r\n                        this.$router.push('/listStudentGroups');\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            }\r\n        },\r\n        mounted() { // загружаем данные учебной дисциплины\r\n            this.getStudentGroup();\r\n        }\r\n    }\r\n</script>"],"mappings":";;EAAAA,GAAA;AAAA;gCAEQC,mBAAA,CAA4B,YAAxB,qBAAmB;;EAF/BD,GAAA;EAGaE,KAAK,EAAC;;;EAEEA,KAAK,EAAC;AAAiB;gCAC5BD,mBAAA,CAA8F;EAAzFC,KAAK,EAAC;AAAiB,I,aAACD,mBAAA,CAA2D;EAApDC,KAAK,EAAC,cAAc;EAACC,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;;;EAN7FJ,GAAA;EAUaE,KAAK,EAAC;;gCACPD,mBAAA,CAAmC,YAA/B,4BAA0B;;EAX1CD,GAAA;AAAA;gCAgBQC,mBAAA,CAAI;iCACJA,mBAAA,CAAmC,WAAhC,8BAA4B;qBAD/BI,UAAI,EACJC,WAAmC,C;;;cAhBvBC,YAAY,I,cAA5BC,mBAAA,CAaM,OAdVC,UAAA,GAEQC,UAA4B,E,CACCC,KAAA,CAAAC,SAAS,I,cAAtCJ,mBAAA,CAMM,OANNK,UAMM,GALFZ,mBAAA,CAGO;IAHAa,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,kBAAA,IAAAD,QAAA,CAAAC,kBAAA,IAAAF,IAAA,CAAkB;MAC7Bf,mBAAA,CAA4K,OAA5KkB,UAA4K,G,gBAA/IlB,mBAAA,CAAyI;IAAlIC,KAAK,EAAC,cAAc;IAACC,IAAI,EAAC,MAAM;IAACiB,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,MAAM;IAACC,WAAW,EAAC,yBAAyB;IAACC,QAAQ,EAAR,EAAQ;IALzJ,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAKmKb,KAAA,CAAAJ,YAAY,CAACa,IAAI,GAAAI,MAAA;iDAAjBb,KAAA,CAAAJ,YAAY,CAACa,IAAI,E,KACpKK,UAA8F,C,4BAElGxB,mBAAA,CAAiF;IAAzEC,KAAK,EAAC,gBAAgB;IAAMwB,OAAK,EAAAX,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAAEP,QAAA,CAAAU,kBAAkB;KAAI,SAAO,E,oBAE5EnB,mBAAA,CAGM,OAHNoB,UAGM,GAFFC,UAAmC,EACnCC,YAAA,CAAwFC,sBAAA;IAA3EC,EAAE,EAAC;EAAoB;IAZhDC,OAAA,EAAAC,QAAA,CAYiD,MAAqC,CAZtFC,gBAAA,CAYiD,uCAAqC,E;IAZtFC,CAAA;4BAeI5B,mBAAA,CAGM,OAlBV6B,UAAA,MAAAC,WAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}