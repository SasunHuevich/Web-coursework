{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-center mb-4\"\n}, \"Добавление вопросов к викторине\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-8\"\n};\nconst _hoisted_5 = {\n  class: \"card\"\n};\nconst _hoisted_6 = {\n  class: \"card-body\"\n};\nconst _hoisted_7 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"questionText\"\n}, \"Текст вопроса:\", -1 /* HOISTED */);\nconst _hoisted_9 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"correctAnswer\"\n}, \"Правильный ответ:\", -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Неправильные ответы:\", -1 /* HOISTED */);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group mb-3\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"btn btn-success w-100\",\n  type: \"submit\",\n  value: \"Добавить вопрос\"\n})], -1 /* HOISTED */);\nconst _hoisted_14 = {\n  key: 0,\n  class: \"mt-4\"\n};\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"h5\", null, \"Список добавленных вопросов:\", -1 /* HOISTED */);\nconst _hoisted_16 = {\n  class: \"list-group\"\n};\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = [\"onClick\"];\nconst _hoisted_19 = {\n  key: 0,\n  class: \"mt-2\"\n};\nconst _hoisted_20 = {\n  class: \"list-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = (...args) => $options.addQuestion && $options.addQuestion(...args))\n  }, [_createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"form-control\",\n    id: \"questionText\",\n    placeholder: \"Введите вопрос\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.question.text = $event),\n    rows: \"2\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.question.text]])]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control\",\n    type: \"text\",\n    id: \"correctAnswer\",\n    placeholder: \"Введите правильный ответ\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.question.correctAnswer = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.question.correctAnswer]])]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control mb-2\",\n    type: \"text\",\n    placeholder: \"Неправильный ответ 1\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.question.wrongAnswer1 = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.question.wrongAnswer1]]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control mb-2\",\n    type: \"text\",\n    placeholder: \"Неправильный ответ 2\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.question.wrongAnswer2 = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.question.wrongAnswer2]]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control\",\n    type: \"text\",\n    placeholder: \"Неправильный ответ 3\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.question.wrongAnswer3 = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.question.wrongAnswer3]])]), _hoisted_13], 32 /* NEED_HYDRATION */)])]), $data.questions.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_hoisted_15, _createElementVNode(\"ul\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, q => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: q.id,\n      class: \"list-group-item d-flex justify-content-between align-items-center\"\n    }, [_createTextVNode(_toDisplayString(q.question_text) + \" \", 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-sm btn-danger\",\n      onClick: $event => $options.confirmDelete(q.id)\n    }, \"Удалить\", 8 /* PROPS */, _hoisted_17), _createElementVNode(\"button\", {\n      class: \"btn btn-sm btn-info\",\n      onClick: $event => $options.showAnswers(q.id)\n    }, \"Показать ответы\", 8 /* PROPS */, _hoisted_18)]), q.showAnswers ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createElementVNode(\"ul\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(q.answers, answer => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: answer.id,\n        class: _normalizeClass({\n          'list-group-item-success': answer.is_correct\n        })\n      }, _toDisplayString(answer.text), 3 /* TEXT, CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","value","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","onSubmit","_cache","args","$options","addQuestion","_hoisted_7","_hoisted_8","id","placeholder","required","$event","$data","question","text","rows","_hoisted_9","_hoisted_10","correctAnswer","_hoisted_11","_hoisted_12","wrongAnswer1","wrongAnswer2","wrongAnswer3","_hoisted_13","questions","length","_hoisted_14","_hoisted_15","_hoisted_16","_Fragment","_renderList","q","_createTextVNode","_toDisplayString","question_text","onClick","confirmDelete","_hoisted_17","showAnswers","_hoisted_18","_hoisted_19","_hoisted_20","answers","answer","_normalizeClass","is_correct","_createCommentVNode"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\quiz\\AddQuestions.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-5\">\r\n        <h4 class=\"text-center mb-4\">Добавление вопросов к викторине</h4>\r\n\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-md-8\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <form @submit=\"addQuestion\">\r\n                            <div class=\"form-group mb-3\">\r\n                                <label for=\"questionText\">Текст вопроса:</label>\r\n                                <textarea\r\n                                    class=\"form-control\"\r\n                                    id=\"questionText\"\r\n                                    placeholder=\"Введите вопрос\"\r\n                                    required\r\n                                    v-model=\"question.text\"\r\n                                    rows=\"2\"\r\n                                ></textarea>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-3\">\r\n                                <label for=\"correctAnswer\">Правильный ответ:</label>\r\n                                <input\r\n                                    class=\"form-control\"\r\n                                    type=\"text\"\r\n                                    id=\"correctAnswer\"\r\n                                    placeholder=\"Введите правильный ответ\"\r\n                                    required\r\n                                    v-model=\"question.correctAnswer\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-3\">\r\n                                <label>Неправильные ответы:</label>\r\n                                <input\r\n                                    class=\"form-control mb-2\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Неправильный ответ 1\"\r\n                                    required\r\n                                    v-model=\"question.wrongAnswer1\"\r\n                                />\r\n                                <input\r\n                                    class=\"form-control mb-2\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Неправильный ответ 2\"\r\n                                    required\r\n                                    v-model=\"question.wrongAnswer2\"\r\n                                />\r\n                                <input\r\n                                    class=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Неправильный ответ 3\"\r\n                                    required\r\n                                    v-model=\"question.wrongAnswer3\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-3\">\r\n                                <input class=\"btn btn-success w-100\" type=\"submit\" value=\"Добавить вопрос\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div v-if=\"questions.length\" class=\"mt-4\">\r\n                    <h5>Список добавленных вопросов:</h5>\r\n                    <ul class=\"list-group\">\r\n                        <li v-for=\"q in questions\" :key=\"q.id\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            {{ q.question_text }}\r\n                            <div>\r\n                                <button class=\"btn btn-sm btn-danger\" @click=\"confirmDelete(q.id)\">Удалить</button>\r\n                                <button class=\"btn btn-sm btn-info\" @click=\"showAnswers(q.id)\">Показать ответы</button>\r\n                            </div>\r\n                            <div v-if=\"q.showAnswers\" class=\"mt-2\">\r\n                                <ul class=\"list-group\">\r\n                                    <li v-for=\"answer in q.answers\" :key=\"answer.id\" :class=\"{'list-group-item-success': answer.is_correct}\">\r\n                                        {{ answer.text }}\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"../../http-common\";\r\n\r\nexport default {\r\n    name: \"AddQuestions\",\r\n    data() {\r\n        return {\r\n            question: {\r\n                id: null,\r\n                quiz_id: this.$route.params.quizId,\r\n                quetion_id: null,\r\n                text: \"\",\r\n                correctAnswer: \"\",\r\n                wrongAnswer1: \"\",\r\n                wrongAnswer2: \"\",\r\n                wrongAnswer3: \"\"\r\n            },\r\n            questions: []\r\n        };\r\n    },\r\n    methods: {\r\n        addQuestion(e) {\r\n            e.preventDefault();\r\n            var data = {\r\n                quiz_id: this.question.quiz_id,\r\n                quetion_id: this.question.id,\r\n                question_text: this.question.text,\r\n                correctAnswer: this.question.correctAnswer,\r\n                wrongAnswer1: this.question.wrongAnswer1,\r\n                wrongAnswer2: this.question.wrongAnswer2,\r\n                wrongAnswer3: this.question.wrongAnswer3\r\n            };\r\n\r\n            http\r\n                .post(\"/addQuestion\", data)\r\n                .then(response => {\r\n                    this.question.id = response.data.id;\r\n                    this.question.text = \"\";\r\n                    this.question.correctAnswer = \"\";\r\n                    this.question.wrongAnswer1 = \"\";\r\n                    this.question.wrongAnswer2 = \"\";\r\n                    this.question.wrongAnswer3 = \"\";\r\n                    this.fetchQuestions();\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        },\r\n\r\n        fetchQuestions() {\r\n            http\r\n                .get(`/getQuestionsByQuizId/${this.question.quiz_id}`)\r\n                .then(response => {\r\n                    this.questions = response.data;\r\n\r\n                    this.questions.forEach(q => {\r\n                        q.showAnswers = false;\r\n                        q.answers = [];\r\n                    });\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        },\r\n\r\n        showAnswers(questionId) {\r\n            const question = this.questions.find(q => q.id === questionId);\r\n            if (!question.showAnswers) {\r\n                this.fetchAnswers(questionId, question);\r\n            } else {\r\n                question.showAnswers = !question.showAnswers;\r\n            }\r\n        },\r\n\r\n        fetchAnswers(questionId, question) {\r\n            http\r\n                .get(`/getAnswersByQuestionId/${questionId}`)\r\n                .then(response => {\r\n                    question.answers = response.data;\r\n                    question.showAnswers = true;\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        },\r\n\r\n        confirmDelete(questionId) {\r\n            if (confirm(\"Вы уверены, что хотите удалить этот вопрос?\")) {\r\n                http\r\n                    .delete(`/deleteQuestion/${questionId}`)\r\n                    .then(() => {\r\n                        this.fetchQuestions();\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        this.fetchQuestions();\r\n    }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}