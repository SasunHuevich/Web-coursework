{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"../../http-common\";\nexport default {\n  name: \"UserQuizzes\",\n  data() {\n    return {\n      quizzes: [] // Массив для хранения викторин пользователя\n    };\n  },\n  methods: {\n    // Получение списка викторин пользователя\n    fetchUserQuizzes() {\n      const userId = this.userId;\n      http.get(`/getQuizzesByUser/${userId}`).then(response => {\n        this.quizzes = response.data.map(quiz => ({\n          ...quiz,\n          showDescription: false // Изначально описание скрыто\n        }));\n      }).catch(error => {\n        console.log(\"Ошибка при получении викторин: \", error);\n      });\n    },\n    // Метод для редактирования викторины\n    editQuiz(quizId) {\n      this.$router.push({\n        path: `/addQuestions/${quizId}`\n      });\n    },\n    // Метод для подтверждения удаления викторины\n    confirmDelete(quizId) {\n      if (confirm(\"Вы уверены, что хотите удалить эту викторину?\")) {\n        this.deleteQuiz(quizId);\n      }\n    },\n    // Метод для удаления викторины\n    deleteQuiz(quizId) {\n      http.delete(`/deleteQuiz/${quizId}`).then(() => {\n        this.fetchUserQuizzes(); // Обновляем список после удаления\n      }).catch(error => {\n        console.log(\"Ошибка при удалении викторины: \", error);\n      });\n    },\n    // Метод для переключения видимости описания викторины\n    toggleDescription(quizId) {\n      const quiz = this.quizzes.find(q => q.id === quizId);\n      if (quiz) {\n        quiz.showDescription = !quiz.showDescription;\n      }\n    }\n  },\n  mounted() {\n    this.fetchUserQuizzes();\n  }\n};","map":{"version":3,"names":["http","name","data","quizzes","methods","fetchUserQuizzes","userId","get","then","response","map","quiz","showDescription","catch","error","console","log","editQuiz","quizId","$router","push","path","confirmDelete","confirm","deleteQuiz","delete","toggleDescription","find","q","id","mounted"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\quiz\\MyQuiz.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-5\">\r\n      <h3 class=\"text-center mb-4\">Ваши викторины</h3>\r\n  \r\n      <div v-if=\"quizzes.length\" class=\"row justify-content-center\">\r\n        <div class=\"col-md-8\">\r\n          <ul class=\"list-group\">\r\n            <!-- Перебор списка викторин, вывод каждой викторины с кнопками изменения и удаления -->\r\n            <li v-for=\"quiz in quizzes\" :key=\"quiz.id\" class=\"list-group-item d-flex flex-column\">\r\n              <div class=\"d-flex justify-content-between align-items-center\">\r\n                <!-- Название викторины -->\r\n                <span>{{ quiz.name }}</span>\r\n  \r\n                <div>\r\n                  <!-- Кнопка для отображения описания -->\r\n                  <button class=\"btn btn-sm btn-secondary mr-2\" @click=\"toggleDescription(quiz.id)\">\r\n                    {{ quiz.showDescription ? 'Скрыть описание' : 'Описание' }}\r\n                  </button>\r\n                  <!-- Кнопка редактирования -->\r\n                  <button class=\"btn btn-sm btn-info mr-2\" @click=\"editQuiz(quiz.id)\">Изменить</button>\r\n                  <!-- Кнопка удаления -->\r\n                  <button class=\"btn btn-sm btn-danger\" @click=\"confirmDelete(quiz.id)\">Удалить</button>\r\n                </div>\r\n              </div>\r\n  \r\n              <!-- Описание викторины, если отображено -->\r\n              <div v-if=\"quiz.showDescription\" class=\"quiz-description mt-3 p-3\">\r\n                <p>{{ quiz.description }}</p>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Если у пользователя нет викторин -->\r\n      <div v-else class=\"text-center\">\r\n        <p>У вас пока нет созданных викторин.</p>\r\n        <router-link to=\"/addQuiz1\" class=\"btn btn-primary\">Создать новую викторину</router-link>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import http from \"../../http-common\";\r\n  \r\n  export default {\r\n    name: \"UserQuizzes\",\r\n    data() {\r\n      return {\r\n        quizzes: [] // Массив для хранения викторин пользователя\r\n      };\r\n    },\r\n    methods: {\r\n      // Получение списка викторин пользователя\r\n      fetchUserQuizzes() {\r\n        const userId = this.userId;\r\n        http\r\n          .get(`/getQuizzesByUser/${userId}`)\r\n          .then(response => {\r\n            this.quizzes = response.data.map(quiz => ({\r\n              ...quiz,\r\n              showDescription: false // Изначально описание скрыто\r\n            }));\r\n          })\r\n          .catch(error => {\r\n            console.log(\"Ошибка при получении викторин: \", error);\r\n          });\r\n      },\r\n  \r\n      // Метод для редактирования викторины\r\n      editQuiz(quizId) {\r\n        this.$router.push({ path: `/addQuestions/${quizId}` });\r\n      },\r\n  \r\n      // Метод для подтверждения удаления викторины\r\n      confirmDelete(quizId) {\r\n        if (confirm(\"Вы уверены, что хотите удалить эту викторину?\")) {\r\n          this.deleteQuiz(quizId);\r\n        }\r\n      },\r\n  \r\n      // Метод для удаления викторины\r\n      deleteQuiz(quizId) {\r\n        http\r\n          .delete(`/deleteQuiz/${quizId}`)\r\n          .then(() => {\r\n            this.fetchUserQuizzes(); // Обновляем список после удаления\r\n          })\r\n          .catch(error => {\r\n            console.log(\"Ошибка при удалении викторины: \", error);\r\n          });\r\n      },\r\n  \r\n      // Метод для переключения видимости описания викторины\r\n      toggleDescription(quizId) {\r\n        const quiz = this.quizzes.find(q => q.id === quizId);\r\n        if (quiz) {\r\n          quiz.showDescription = !quiz.showDescription;\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.fetchUserQuizzes();\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Стили для кнопок */\r\n  .btn-info {\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  /* Стили для описания викторины */\r\n  .quiz-description {\r\n    background-color: #e0f7fa; /* Светло-голубой фон */\r\n    border: 1px solid #b2ebf2; /* Голубая рамка */\r\n    border-radius: 5px; /* Скруглённые углы */\r\n    padding: 10px; /* Внутренний отступ */\r\n    margin-top: 10px; /* Отступ сверху */\r\n  }\r\n  </style>\r\n  "],"mappings":";AA2CE,OAAOA,IAAG,MAAO,mBAAmB;AAEpC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAC,CAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,gBAAgBA,CAAA,EAAG;MACjB,MAAMC,MAAK,GAAI,IAAI,CAACA,MAAM;MAC1BN,IAAG,CACAO,GAAG,CAAE,qBAAoBD,MAAO,EAAC,EACjCE,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACN,OAAM,GAAIM,QAAQ,CAACP,IAAI,CAACQ,GAAG,CAACC,IAAG,KAAM;UACxC,GAAGA,IAAI;UACPC,eAAe,EAAE,KAAI,CAAE;QACzB,CAAC,CAAC,CAAC;MACL,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,KAAK,CAAC;MACvD,CAAC,CAAC;IACN,CAAC;IAED;IACAG,QAAQA,CAACC,MAAM,EAAE;MACf,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAG,iBAAgBH,MAAO;MAAE,CAAC,CAAC;IACxD,CAAC;IAED;IACAI,aAAaA,CAACJ,MAAM,EAAE;MACpB,IAAIK,OAAO,CAAC,+CAA+C,CAAC,EAAE;QAC5D,IAAI,CAACC,UAAU,CAACN,MAAM,CAAC;MACzB;IACF,CAAC;IAED;IACAM,UAAUA,CAACN,MAAM,EAAE;MACjBlB,IAAG,CACAyB,MAAM,CAAE,eAAcP,MAAO,EAAC,EAC9BV,IAAI,CAAC,MAAM;QACV,IAAI,CAACH,gBAAgB,CAAC,CAAC,EAAE;MAC3B,CAAC,EACAQ,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,KAAK,CAAC;MACvD,CAAC,CAAC;IACN,CAAC;IAED;IACAY,iBAAiBA,CAACR,MAAM,EAAE;MACxB,MAAMP,IAAG,GAAI,IAAI,CAACR,OAAO,CAACwB,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMX,MAAM,CAAC;MACpD,IAAIP,IAAI,EAAE;QACRA,IAAI,CAACC,eAAc,GAAI,CAACD,IAAI,CAACC,eAAe;MAC9C;IACF;EACF,CAAC;EACDkB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACzB,gBAAgB,CAAC,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}