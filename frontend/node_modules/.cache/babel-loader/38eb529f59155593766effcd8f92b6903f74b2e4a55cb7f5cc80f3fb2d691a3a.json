{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\";\nimport store from \"./store/index\";\n// импорт компонентов\nimport ListDisciplines from \"./components/discipline/ListDisciplines\";\nimport AddDiscipline from \"./components/discipline/AddDiscipline\";\nimport Discipline from \"./components/discipline/Discipline\";\nimport ListStudents from \"./components/student/ListStudents\";\nimport AddStudent from \"./components/student/AddStudent\";\nimport Student from \"./components/student/Student\";\nimport ListTeachers from \"./components/teacher/ListTeachers\";\nimport Teacher from \"./components/teacher/Teacher\";\nimport AddTeacher from \"./components/teacher/AddTeacher\";\nimport ListStudentGroups from \"./components/studentGroup/ListStudentGroups\";\nimport AddStudentGroup from \"./components/studentGroup/AddStudentGroup\";\nimport StudentGroup from \"./components/studentGroup/StudentGroup\";\nimport AddTeacherDiscipline from \"./components/teacher/AddTeacherDiscipline\";\nimport ListTeacherDiscipline from \"./components/teacher/ListTeacherDiscipline\";\nimport AddSessionRecord from \"./components/attestationBook/AddSessionRecord\";\nimport ListSessionRecord from \"./components/attestationBook/ListSessionRecord\";\nimport AttestationBookGroups from \"./components/attestationBook/ListStudentsGroups\";\nimport AttestationBookStudents from \"./components/attestationBook/ListStudents\";\nimport AttestationBook from \"./components/attestationBook/AttestationBook\";\nimport Login from \"./components/authorization/Login\";\nimport Profile from \"./components/authorization/Profile\";\nimport Register from \"./components/authorization/Register\";\n\n// определяем маршруты\nconst routes = [\n//Дисциплины\n{\n  path: \"/listDisciplines\",\n  // указание маршрута, по которому будем переходить к списку учебных дисциплин\n  name: \"disciplines\",\n  // имя маршрута\n  alias: \"/disciplines\",\n  // указание дополнительного маршрута\n  component: ListDisciplines,\n  // компонент, на основании которого будет отрисовываться страница\n  meta: {\n    title: \"Список учебных дисциплин\"\n  }\n}, {\n  path: \"/addDiscipline\",\n  name: \"add-discipline\",\n  component: AddDiscipline,\n  meta: {\n    title: \"Добавление учебной дисциплины\"\n  }\n}, {\n  path: \"/discipline/:id\",\n  name: \"discipline-details\",\n  component: Discipline,\n  props: true,\n  // указываем, что компонент Discipline.vue может принимать параметры в адресной строке, например, в path указан id\n  meta: {\n    title: \"Данные учебной дисциплины\"\n  }\n},\n//Студенты\n{\n  path: \"/listStudents\",\n  name: \"students\",\n  alias: \"/students\",\n  component: ListStudents,\n  meta: {\n    title: \"Список студентов\"\n  }\n}, {\n  path: \"/addStudent\",\n  name: \"add-student\",\n  component: AddStudent,\n  meta: {\n    title: \"Добавление студента\"\n  }\n}, {\n  path: \"/student/:id\",\n  name: \"student-details\",\n  component: Student,\n  props: true,\n  meta: {\n    title: \"Данные студента\"\n  }\n},\n//Преподаватели\n{\n  path: \"/listTeachers\",\n  name: \"teachers\",\n  alias: \"/teachers\",\n  component: ListTeachers,\n  meta: {\n    title: \"Список преподавателей\"\n  }\n}, {\n  path: \"/addTeacher\",\n  name: \"add-teacher\",\n  component: AddTeacher,\n  meta: {\n    title: \"Добавление преподавателя\"\n  }\n}, {\n  path: \"/teacher/:id\",\n  name: \"teacher-details\",\n  component: Teacher,\n  props: true,\n  meta: {\n    title: \"Данные преподавателя\"\n  }\n}, {\n  path: \"/addTeacherDiscipline\",\n  name: \"add-teacher-discipline\",\n  component: AddTeacherDiscipline,\n  meta: {\n    title: \"Назначение преподавателю учебной дисциплины\"\n  }\n}, {\n  path: \"/listTeacherDiscipline\",\n  name: \"list-teacher-discipline\",\n  component: ListTeacherDiscipline,\n  meta: {\n    title: \"Учебные дисциплины преподавателей\"\n  }\n},\n//Студенческие группы\n{\n  path: \"/listStudentGroups\",\n  name: \"studentGroups\",\n  alias: \"/studentGroups\",\n  component: ListStudentGroups,\n  meta: {\n    title: \"Список студенческих групп\"\n  }\n}, {\n  path: \"/addStudentGroup\",\n  name: \"add-studentGroup\",\n  component: AddStudentGroup,\n  meta: {\n    title: \"Добавление студенческой группы\"\n  }\n}, {\n  path: \"/studentGroup/:id\",\n  name: \"studentGroup-details\",\n  component: StudentGroup,\n  props: true,\n  meta: {\n    title: \"Данные студенческой группы\"\n  }\n},\n//зачетная книжка\n{\n  path: \"/addSessionRecord\",\n  name: \"add-session-record\",\n  component: AddSessionRecord,\n  meta: {\n    title: \"Добавление записи о сессии\"\n  }\n}, {\n  path: \"/listSessionRecord\",\n  name: \"list-session-record\",\n  component: ListSessionRecord,\n  meta: {\n    title: \"Записи о сессиях\"\n  }\n}, {\n  path: \"/attestationBook\",\n  name: \"attestation-book-groups\",\n  component: AttestationBookGroups,\n  meta: {\n    title: \"Студенческие группы\"\n  }\n}, {\n  path: \"/attestationBook/group/:student_group_id\",\n  name: \"attestation-book-students\",\n  component: AttestationBookStudents,\n  props: true,\n  meta: {\n    title: \"Студенты\"\n  }\n}, {\n  path: \"/attestationBook/studentId=:student_id\",\n  name: \"attestation-book\",\n  component: AttestationBook,\n  props: true,\n  meta: {\n    title: \"Зачётная книжка\"\n  }\n},\n//регистрация и вход\n{\n  path: \"/login\",\n  name: \"login-user\",\n  component: Login,\n  meta: {\n    title: \"Вход в систему\"\n  }\n}, {\n  path: \"/register\",\n  name: \"register-user\",\n  component: Register,\n  meta: {\n    title: \"Регистрация\"\n  }\n}, {\n  path: \"/profile\",\n  name: \"profile-user\",\n  component: Profile,\n  meta: {\n    title: \"Профиль пользователя\",\n    // маршрут защищаем (делаем доступным только авторизованным пользователям)\n    requiredAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  // указываем, что будет создаваться история посещений веб-страниц\n  routes // подключаем маршрутизацию\n});\n\n// указание заголовка компонентам (тега title), заголовки определены в meta\nrouter.beforeEach(async (to, from, next) => {\n  // для тех маршрутов, для которых не определены компоненты, подключается только App.vue\n  // поэтому устанавливаем заголовком по умолчанию название \"Главная страница\"\n  document.title = to.meta.title || 'Главная страница';\n\n  // проверяем наличие токена и срок его действия\n  const auth = await store.getters[\"auth/isTokenActive\"];\n  if (auth) {\n    return next();\n  }\n  // если токена нет или его срок действия истёк, а страница доступна только авторизованному пользователю,\n  // то переходим на страницу входа в систему (ссылка на /login)\n  else if (!auth && to.meta.requiredAuth) {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    await store.dispatch(\"auth/refreshToken\", user).then(() => {\n      return next();\n    }).catch(() => {\n      return next({\n        path: \"/login\"\n      });\n    });\n    return next({\n      path: \"/login\"\n    });\n  }\n  return next();\n});\nexport default router;","map":{"version":3,"names":["createWebHistory","createRouter","store","ListDisciplines","AddDiscipline","Discipline","ListStudents","AddStudent","Student","ListTeachers","Teacher","AddTeacher","ListStudentGroups","AddStudentGroup","StudentGroup","AddTeacherDiscipline","ListTeacherDiscipline","AddSessionRecord","ListSessionRecord","AttestationBookGroups","AttestationBookStudents","AttestationBook","Login","Profile","Register","routes","path","name","alias","component","meta","title","props","requiredAuth","router","history","beforeEach","to","from","next","document","auth","getters","user","JSON","parse","localStorage","getItem","dispatch","then","catch"],"sources":["X:/Downoloads/SecondProject/SecondProject/frontend/src/router.js"],"sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\r\nimport store from \"./store/index\";\r\n// импорт компонентов\r\nimport ListDisciplines from \"./components/discipline/ListDisciplines\";\r\nimport AddDiscipline from \"./components/discipline/AddDiscipline\";\r\nimport Discipline from \"./components/discipline/Discipline\";\r\nimport ListStudents from \"./components/student/ListStudents\";\r\nimport AddStudent from \"./components/student/AddStudent\";\r\nimport Student from \"./components/student/Student\";\r\nimport ListTeachers from \"./components/teacher/ListTeachers\";\r\nimport Teacher from \"./components/teacher/Teacher\";\r\nimport AddTeacher from \"./components/teacher/AddTeacher\";\r\nimport ListStudentGroups from \"./components/studentGroup/ListStudentGroups\";\r\nimport AddStudentGroup from \"./components/studentGroup/AddStudentGroup\";\r\nimport StudentGroup from \"./components/studentGroup/StudentGroup\";\r\nimport AddTeacherDiscipline from \"./components/teacher/AddTeacherDiscipline\";\r\nimport ListTeacherDiscipline from \"./components/teacher/ListTeacherDiscipline\"\r\nimport AddSessionRecord from \"./components/attestationBook/AddSessionRecord\";\r\nimport ListSessionRecord from \"./components/attestationBook/ListSessionRecord\";\r\nimport AttestationBookGroups from \"./components/attestationBook/ListStudentsGroups\";\r\nimport AttestationBookStudents from \"./components/attestationBook/ListStudents\";\r\nimport AttestationBook from \"./components/attestationBook/AttestationBook\";\r\nimport Login from \"./components/authorization/Login\";\r\nimport Profile from \"./components/authorization/Profile\";\r\nimport Register from \"./components/authorization/Register\";\r\n\r\n\r\n// определяем маршруты\r\nconst routes = [\r\n    //Дисциплины\r\n    {\r\n        path: \"/listDisciplines\", // указание маршрута, по которому будем переходить к списку учебных дисциплин\r\n        name: \"disciplines\", // имя маршрута\r\n        alias: \"/disciplines\", // указание дополнительного маршрута\r\n        component: ListDisciplines, // компонент, на основании которого будет отрисовываться страница\r\n        meta: {\r\n            title: \"Список учебных дисциплин\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/addDiscipline\",\r\n        name: \"add-discipline\",\r\n        component: AddDiscipline,\r\n        meta: {\r\n            title: \"Добавление учебной дисциплины\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/discipline/:id\",\r\n        name: \"discipline-details\",\r\n        component: Discipline,\r\n        props: true, // указываем, что компонент Discipline.vue может принимать параметры в адресной строке, например, в path указан id\r\n        meta: {\r\n            title: \"Данные учебной дисциплины\"\r\n        }\r\n    },\r\n    //Студенты\r\n    {\r\n        path: \"/listStudents\",\r\n        name: \"students\",\r\n        alias: \"/students\",\r\n        component: ListStudents,\r\n        meta: {\r\n            title: \"Список студентов\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/addStudent\",\r\n        name: \"add-student\",\r\n        component: AddStudent,\r\n        meta: {\r\n            title: \"Добавление студента\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/student/:id\",\r\n        name: \"student-details\",\r\n        component: Student,\r\n        props: true,\r\n        meta: {\r\n            title: \"Данные студента\"\r\n        }\r\n    },\r\n    //Преподаватели\r\n    {\r\n        path: \"/listTeachers\",\r\n        name: \"teachers\",\r\n        alias: \"/teachers\",\r\n        component: ListTeachers,\r\n        meta: {\r\n            title: \"Список преподавателей\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/addTeacher\",\r\n        name: \"add-teacher\",\r\n        component: AddTeacher,\r\n        meta: {\r\n            title: \"Добавление преподавателя\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/teacher/:id\",\r\n        name: \"teacher-details\",\r\n        component: Teacher, \r\n        props: true, \r\n        meta: {\r\n            title: \"Данные преподавателя\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/addTeacherDiscipline\",\r\n        name: \"add-teacher-discipline\",\r\n        component: AddTeacherDiscipline,\r\n        meta: {\r\n            title: \"Назначение преподавателю учебной дисциплины\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/listTeacherDiscipline\",\r\n        name: \"list-teacher-discipline\",\r\n        component: ListTeacherDiscipline,\r\n        meta: {\r\n            title: \"Учебные дисциплины преподавателей\"\r\n        }\r\n    },\r\n    //Студенческие группы\r\n    {\r\n        path: \"/listStudentGroups\",\r\n        name: \"studentGroups\",\r\n        alias: \"/studentGroups\",\r\n        component: ListStudentGroups,\r\n        meta: {\r\n            title: \"Список студенческих групп\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/addStudentGroup\",\r\n        name: \"add-studentGroup\",\r\n        component: AddStudentGroup,\r\n        meta: {\r\n            title: \"Добавление студенческой группы\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/studentGroup/:id\",\r\n        name: \"studentGroup-details\",\r\n        component: StudentGroup,\r\n        props: true,\r\n        meta: {\r\n            title: \"Данные студенческой группы\"\r\n        }\r\n    },\r\n    //зачетная книжка\r\n    {\r\n        path: \"/addSessionRecord\",\r\n        name: \"add-session-record\",\r\n        component: AddSessionRecord,\r\n        meta: {\r\n            title: \"Добавление записи о сессии\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/listSessionRecord\",\r\n        name: \"list-session-record\",\r\n        component: ListSessionRecord,\r\n        meta: {\r\n            title: \"Записи о сессиях\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/attestationBook\",\r\n        name: \"attestation-book-groups\",\r\n        component: AttestationBookGroups,\r\n        meta: {\r\n            title: \"Студенческие группы\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/attestationBook/group/:student_group_id\",\r\n        name: \"attestation-book-students\",\r\n        component: AttestationBookStudents,\r\n        props: true,\r\n        meta: {\r\n            title: \"Студенты\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/attestationBook/studentId=:student_id\",\r\n        name: \"attestation-book\",\r\n        component: AttestationBook,\r\n        props: true,\r\n        meta: {\r\n            title: \"Зачётная книжка\"\r\n        }\r\n    },\r\n    //регистрация и вход\r\n    {\r\n        path: \"/login\",\r\n        name: \"login-user\",\r\n        component: Login,\r\n        meta: {\r\n            title: \"Вход в систему\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/register\",\r\n        name: \"register-user\",\r\n        component: Register,\r\n        meta: {\r\n            title: \"Регистрация\"\r\n        }\r\n    },\r\n    {\r\n        path: \"/profile\",\r\n        name: \"profile-user\",\r\n        component: Profile,\r\n        meta: {\r\n            title: \"Профиль пользователя\",\r\n            // маршрут защищаем (делаем доступным только авторизованным пользователям)\r\n            requiredAuth: true\r\n        }\r\n    },\r\n];\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(), // указываем, что будет создаваться история посещений веб-страниц\r\n    routes, // подключаем маршрутизацию\r\n});\r\n\r\n    // указание заголовка компонентам (тега title), заголовки определены в meta\r\nrouter.beforeEach(async (to, from, next) => {\r\n    // для тех маршрутов, для которых не определены компоненты, подключается только App.vue\r\n    // поэтому устанавливаем заголовком по умолчанию название \"Главная страница\"\r\n    document.title = to.meta.title || 'Главная страница';\r\n\r\n    // проверяем наличие токена и срок его действия\r\n    const auth = await store.getters[\"auth/isTokenActive\"];\r\n    if (auth) {\r\n        return next();\r\n    }\r\n    // если токена нет или его срок действия истёк, а страница доступна только авторизованному пользователю,\r\n    // то переходим на страницу входа в систему (ссылка на /login)\r\n    else if (!auth && to.meta.requiredAuth) {\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        await store.dispatch(\"auth/refreshToken\", user)\r\n            .then(() => {\r\n                return next();\r\n            })\r\n            .catch(() => {\r\n                return next({ path: \"/login\" });\r\n            });\r\n        return next({ path: \"/login\" });\r\n    }\r\n    return next();\r\n});\r\n\r\nexport default router;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}