{"ast":null,"code":"export default {\n  name: 'LoginUser',\n  data() {\n    return {\n      user: {\n        username: \"\",\n        password: \"\"\n      },\n      loading: false,\n      message: ''\n    };\n  },\n  computed: {\n    // вычисляемые свойства\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn; // $store - локальное хранилище\n    }\n  },\n  created() {\n    if (this.loggedIn) {\n      // Авторизация прошла успешно, переходим к главной странице.\n      // Используем такую конструкцию, а не this.$router.push, так как требуется перезагрузить страницу для обновления локального хранилища\n      window.location.href = '/';\n    }\n  },\n  methods: {\n    handleLogin(e) {\n      e.preventDefault();\n      this.loading = true;\n      this.$store.dispatch(\"auth/login\", this.user) // обращаемся к методу login, который определён в auth.service.js\n      .then(() => {\n        window.location.href = '/'; // авторизация прошла успешно, переходим к главной странице. Используем такую конструкцию, а не this.$router.push, так как требуется перезагрузить страницу для обновления локального хранилища\n      }).catch(e => {\n        this.loading = false;\n        this.message = e.response.data.message;\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","username","password","loading","message","computed","loggedIn","$store","state","auth","status","created","window","location","href","methods","handleLogin","e","preventDefault","dispatch","then","catch","response"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\authorization\\Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"col-md-5\">\r\n        <h4 class=\"mx-auto mt-4\">Вход в систему</h4>\r\n        <form name=\"form\" @submit=\"handleLogin\">\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Логин\" v-model=\"user.username\" required/>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Пароль\" v-model=\"user.password\" required/>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn btn-primary\" :disabled=\"loading\">\r\n                    <span v-show=\"loading\" class=\"spinner-border spinner-border-sm\"></span>\r\n                    <span>Войти</span>\r\n                </button>\r\n            </div>\r\n            <router-link to=\"/register\">\r\n                Зарегистрироваться\r\n            </router-link>\r\n            <div class=\"form-group\">\r\n                <div v-if=\"message\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: 'LoginUser',\r\n        data() {\r\n            return {\r\n                user: {\r\n                    username: \"\",\r\n                    password: \"\"\r\n                },\r\n                loading: false,\r\n                message: ''\r\n            };\r\n        },\r\n        computed: { // вычисляемые свойства\r\n            loggedIn() {\r\n                return this.$store.state.auth.status.loggedIn; // $store - локальное хранилище\r\n            }\r\n        },\r\n        created() {\r\n            if (this.loggedIn) {\r\n                // Авторизация прошла успешно, переходим к главной странице.\r\n                // Используем такую конструкцию, а не this.$router.push, так как требуется перезагрузить страницу для обновления локального хранилища\r\n                window.location.href = '/';\r\n            }\r\n        },\r\n        methods: {\r\n            handleLogin(e) {\r\n                e.preventDefault();\r\n                this.loading = true;\r\n                this.$store.dispatch(\"auth/login\", this.user) // обращаемся к методу login, который определён в auth.service.js\r\n                    .then(() => {\r\n                        window.location.href = '/'; // авторизация прошла успешно, переходим к главной странице. Используем такую конструкцию, а не this.$router.push, так как требуется перезагрузить страницу для обновления локального хранилища\r\n                    })\r\n                    .catch(e => {\r\n                            this.loading = false;\r\n                            this.message = e.response.data.message;\r\n                        }\r\n                    );\r\n            }\r\n        }\r\n    };\r\n</script>"],"mappings":"AA0BI,eAAe;EACXA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACd,CAAC;MACDC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACb,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IAAE;IACRC,QAAQA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACJ,QAAQ,EAAE;IACnD;EACJ,CAAC;EACDK,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACL,QAAQ,EAAE;MACf;MACA;MACAM,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,GAAG;IAC9B;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,WAAWA,CAACC,CAAC,EAAE;MACXA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,IAAI,CAACf,OAAM,GAAI,IAAI;MACnB,IAAI,CAACI,MAAM,CAACY,QAAQ,CAAC,YAAY,EAAE,IAAI,CAACnB,IAAI,EAAE;MAAA,CACzCoB,IAAI,CAAC,MAAM;QACRR,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,GAAG,EAAE;MAChC,CAAC,EACAO,KAAK,CAACJ,CAAA,IAAK;QACJ,IAAI,CAACd,OAAM,GAAI,KAAK;QACpB,IAAI,CAACC,OAAM,GAAIa,CAAC,CAACK,QAAQ,CAACvB,IAAI,CAACK,OAAO;MAC1C,CACJ,CAAC;IACT;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}