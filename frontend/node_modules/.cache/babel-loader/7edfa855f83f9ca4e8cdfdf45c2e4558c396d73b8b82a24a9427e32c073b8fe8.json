{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5b70eccd\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"text-center mb-4\"\n}, \"Все викторины\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0,\n  class: \"row justify-content-center\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-8\"\n};\nconst _hoisted_5 = {\n  class: \"list-group\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  key: 1,\n  class: \"text-center\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Викторин пока нет.\", -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_8];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, $data.quizzes.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.quizzes, quiz => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: quiz.id,\n      class: \"list-group-item d-flex justify-content-between align-items-center\"\n    }, [_createElementVNode(\"span\", null, _toDisplayString(quiz.name), 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"btn btn-sm btn-primary\",\n      onClick: $event => $options.startQuiz(quiz.id)\n    }, \"Пройти викторину\", 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [..._hoisted_9]))]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_hoisted_8","_createElementBlock","_hoisted_1","_hoisted_2","$data","quizzes","length","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","quiz","id","_toDisplayString","name","onClick","$event","$options","startQuiz","_hoisted_6","_hoisted_7","_hoisted_9"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\quiz\\QuizList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <h3 class=\"text-center mb-4\">Все викторины</h3>\r\n\r\n    <div v-if=\"quizzes.length\" class=\"row justify-content-center\">\r\n      <div class=\"col-md-8\">\r\n        <ul class=\"list-group\">\r\n          <li v-for=\"quiz in quizzes\" :key=\"quiz.id\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            <span>{{ quiz.name }}</span>\r\n            <button class=\"btn btn-sm btn-primary\" @click=\"startQuiz(quiz.id)\">Пройти викторину</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else class=\"text-center\">\r\n      <p>Викторин пока нет.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"../../http-common\";\r\n\r\nexport default {\r\n  name: \"AllQuizzes\",\r\n  data() {\r\n    return {\r\n      quizzes: [] // Массив для хранения всех викторин\r\n    };\r\n  },\r\n  methods: {\r\n    // Получение всех викторин\r\n    fetchAllQuizzes() {\r\n      http\r\n        .get(\"/quizList\")\r\n        .then(response => {\r\n          this.quizzes = response.data; // Записываем полученные викторины в массив\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Ошибка при получении викторин: \", error);\r\n        });\r\n    },\r\n\r\n    // Метод для начала викторины\r\n    startQuiz(quizId) {\r\n      this.$router.push({ path: `/quiz/${quizId}` }); // Здесь предполагается, что у вас есть маршрут для прохождения викторины\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchAllQuizzes(); // Получаем все викторины при монтировании компонента\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для кнопок и списка викторин */\r\n.list-group-item {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAA+C;EAA3CD,KAAK,EAAC;AAAkB,GAAC,eAAa;;EAF9CE,GAAA;EAI+BF,KAAK,EAAC;;;EAC1BA,KAAK,EAAC;AAAU;;EACfA,KAAK,EAAC;AAAY;mBAN9B;;EAAAE,GAAA;EAegBF,KAAK,EAAC;;gEAChBC,mBAAA,CAAyB,WAAtB,oBAAkB;oBAArBE,UAAyB,C;;uBAf7BC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,UAA+C,EAEpCC,KAAA,CAAAC,OAAO,CAACC,MAAM,I,cAAzBL,mBAAA,CASM,OATNM,UASM,GARJT,mBAAA,CAOM,OAPNU,UAOM,GANJV,mBAAA,CAKK,MALLW,UAKK,I,kBAJHR,mBAAA,CAGKS,SAAA,QAVfC,WAAA,CAO6BP,KAAA,CAAAC,OAAO,EAAfO,IAAI;yBAAfX,mBAAA,CAGK;MAHwBF,GAAG,EAAEa,IAAI,CAACC,EAAE;MAAEhB,KAAK,EAAC;QAC/CC,mBAAA,CAA4B,cAAAgB,gBAAA,CAAnBF,IAAI,CAACG,IAAI,kBAClBjB,mBAAA,CAA4F;MAApFD,KAAK,EAAC,wBAAwB;MAAEmB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAACP,IAAI,CAACC,EAAE;OAAG,kBAAgB,iBAT/FO,UAAA,E;yDAeInB,mBAAA,CAEM,OAFNoB,UAEM,EAjBV,IAAAC,UAAA,I","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}