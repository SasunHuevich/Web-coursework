{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-60c58a68\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mb-4\"\n}, \"Создать новую викторину\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form-group mt-3\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Название\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"form-group mt-3\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"description\"\n}, \"Описание\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group1 mt-3\"\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"image\"\n}, \"Изображение викторины\")], -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary mt-4\"\n}, \"Create Quiz\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 0,\n  class: \"alert alert-success mt-3\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"alert alert-danger mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.addQuiz && $options.addQuiz(...args), [\"prevent\"])),\n    enctype: \"multipart/form-data\"\n  }, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.quiz.name = $event),\n    placeholder: \"Введите название\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.quiz.name]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"form-control\",\n    id: \"description\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.quiz.description = $event),\n    placeholder: \"Введите описание\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.quiz.description]])]), _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"input\", {\n    type: \"file\",\n    class: \"form-control-file\",\n    id: \"image\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.handleImageUpload && $options.handleImageUpload(...args)),\n    accept: \"image/*\",\n    required: \"\"\n  }, null, 32 /* NEED_HYDRATION */)]), _hoisted_9, $data.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","key","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","addQuiz","enctype","_hoisted_3","_hoisted_4","id","$event","$data","quiz","name","placeholder","required","_hoisted_5","_hoisted_6","description","_hoisted_7","_hoisted_8","onChange","handleImageUpload","accept","_hoisted_9","successMessage","_hoisted_10","_toDisplayString","_createCommentVNode","errorMessage","_hoisted_11"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\quiz\\AddQuiz.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n      <h1 class=\"mb-4\">Создать новую викторину</h1>\r\n\r\n      <form @submit.prevent=\"addQuiz\" enctype=\"multipart/form-data\">\r\n          <div class=\"form-group mt-3\">\r\n              <label for=\"title\">Название</label>\r\n              <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"title\"\r\n                  v-model=\"quiz.name\"\r\n                  placeholder=\"Введите название\"\r\n                  required\r\n              />\r\n          </div>\r\n\r\n          <div class=\"form-group mt-3\">\r\n              <label for=\"description\">Описание</label>\r\n              <textarea\r\n                  class=\"form-control\"\r\n                  id=\"description\"\r\n                  v-model=\"quiz.description\"\r\n                  placeholder=\"Введите описание\"\r\n                  required\r\n              ></textarea>\r\n          </div>\r\n\r\n          <div class=\"form-group1 mt-3\">\r\n              <label for=\"image\">Изображение викторины</label>\r\n          </div>\r\n      \r\n          <div class=\"form-group\">\r\n              <input\r\n                  type=\"file\"\r\n                  class=\"form-control-file\"\r\n                  id=\"image\"\r\n                  @change=\"handleImageUpload\"\r\n                  accept=\"image/*\"\r\n                  required\r\n              />\r\n          </div>\r\n\r\n          <button type=\"submit\" class=\"btn btn-primary mt-4\">Create Quiz</button>\r\n\r\n          <div v-if=\"successMessage\" class=\"alert alert-success mt-3\">{{ successMessage }}</div>\r\n          <div v-if=\"errorMessage\" class=\"alert alert-danger mt-3\">{{ errorMessage }}</div>\r\n      </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"../../http-common\";\r\nexport default {\r\n  name: \"CreateQuiz\",\r\n  data() {\r\n      return {\r\n          quiz: {\r\n              name: '',\r\n              description: '',\r\n              user_id: '',\r\n              image: null\r\n          },\r\n          successMessage: '',\r\n          errorMessage: ''\r\n      };\r\n  },\r\n  methods: {\r\n      handleImageUpload(event) {\r\n          this.quiz.image = event.target.files[0]; // сохраняем загруженное изображение\r\n      },\r\n\r\n      addQuiz(e) {\r\n          e.preventDefault(); // запрещаем отправку формы\r\n          const formData = new FormData();\r\n          formData.append('name', this.quiz.name);\r\n          formData.append('description', this.quiz.description);\r\n          //formData.append('image', this.quiz.image); // добавляем изображение\r\n\r\n          http\r\n              .post(\"/addQuiz\", formData, {\r\n                  headers: {\r\n                      'Content-Type': 'multipart/form-data'\r\n                  }\r\n              })\r\n              .then(response => {\r\n                  this.quiz.id = response.data.id;\r\n                  this.successMessage = 'Викторина успешно создана!';\r\n                  this.resetForm();\r\n              })\r\n              .catch(error => {\r\n                  this.errorMessage = 'Ошибка при создании викторины: ' + error.message;\r\n              });\r\n      },\r\n\r\n      resetForm() {\r\n          this.quiz = {\r\n              name: '',\r\n              description: '',\r\n              user_id: '',\r\n              image: null\r\n          };\r\n          this.successMessage = '';\r\n          this.errorMessage = '';\r\n      }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;gEACvBC,mBAAA,CAA6C;EAAzCD,KAAK,EAAC;AAAM,GAAC,yBAAuB;;EAG/BA,KAAK,EAAC;AAAiB;gEACxBC,mBAAA,CAAmC;EAA5BC,GAAG,EAAC;AAAO,GAAC,UAAQ;;EAW1BF,KAAK,EAAC;AAAiB;gEACxBC,mBAAA,CAAyC;EAAlCC,GAAG,EAAC;AAAa,GAAC,UAAQ;gEAUrCD,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAkB,I,aACzBC,mBAAA,CAAgD;EAAzCC,GAAG,EAAC;AAAO,GAAC,uBAAqB,E;;EAGvCF,KAAK,EAAC;AAAY;gEAWvBC,mBAAA,CAAuE;EAA/DE,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAAuB,aAAW;;EA3CxEI,GAAA;EA6CqCJ,KAAK,EAAC;;;EA7C3CI,GAAA;EA8CmCJ,KAAK,EAAC;;;uBA7CvCK,mBAAA,CA+CM,OA/CNC,UA+CM,GA9CFC,UAA6C,EAE7CN,mBAAA,CA2CO;IA3CAO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJnBC,cAAA,KAAAC,IAAA,KAI6BC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IAAEG,OAAO,EAAC;MACpCb,mBAAA,CAUM,OAVNc,UAUM,GATFC,UAAmC,E,gBACnCf,mBAAA,CAOE;IANEE,IAAI,EAAC,MAAM;IACXH,KAAK,EAAC,cAAc;IACpBiB,EAAE,EAAC,OAAO;IAV5B,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAW2BC,KAAA,CAAAC,IAAI,CAACC,IAAI,GAAAH,MAAA;IAClBI,WAAW,EAAC,kBAAkB;IAC9BC,QAAQ,EAAR;iDAFSJ,KAAA,CAAAC,IAAI,CAACC,IAAI,E,KAM1BpB,mBAAA,CASM,OATNuB,UASM,GARFC,UAAyC,E,gBACzCxB,mBAAA,CAMY;IALRD,KAAK,EAAC,cAAc;IACpBiB,EAAE,EAAC,aAAa;IArBlC,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAsB2BC,KAAA,CAAAC,IAAI,CAACM,WAAW,GAAAR,MAAA;IACzBI,WAAW,EAAC,kBAAkB;IAC9BC,QAAQ,EAAR;iDAFSJ,KAAA,CAAAC,IAAI,CAACM,WAAW,E,KAMjCC,UAEM,EAEN1B,mBAAA,CASM,OATN2B,UASM,GARF3B,mBAAA,CAOE;IANEE,IAAI,EAAC,MAAM;IACXH,KAAK,EAAC,mBAAmB;IACzBiB,EAAE,EAAC,OAAO;IACTY,QAAM,EAAApB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAkB,iBAAA,IAAAlB,QAAA,CAAAkB,iBAAA,IAAAnB,IAAA,CAAiB;IAC1BoB,MAAM,EAAC,SAAS;IAChBR,QAAQ,EAAR;uCAIRS,UAAuE,EAE5Db,KAAA,CAAAc,cAAc,I,cAAzB5B,mBAAA,CAAsF,OAAtF6B,WAAsF,EAAAC,gBAAA,CAAvBhB,KAAA,CAAAc,cAAc,oBA7CvFG,mBAAA,gBA8CqBjB,KAAA,CAAAkB,YAAY,I,cAAvBhC,mBAAA,CAAiF,OAAjFiC,WAAiF,EAAAH,gBAAA,CAArBhB,KAAA,CAAAkB,YAAY,oBA9ClFD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}