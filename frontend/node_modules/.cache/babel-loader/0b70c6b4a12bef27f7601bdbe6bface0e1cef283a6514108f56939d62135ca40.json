{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"../../http-common\";\nexport default {\n  name: \"teacher-details\",\n  props: ['id'],\n  data() {\n    return {\n      teacher: null,\n      submitted: false\n    };\n  },\n  methods: {\n    getTeacher() {\n      http.get(\"/teacher/\" + this.id).then(response => {\n        // запрос выполнен успешно\n        this.teacher = response.data;\n      }).catch(e => {\n        // запрос выполнен с ошибкой\n        console.log(e);\n      });\n    },\n    updateTeacher(e) {\n      e.preventDefault(); // запрет отправки формы, так как обрабатывать будем с помощью методов axios\n      var data = {\n        name: this.teacher.name\n      };\n      http.post(\"/updateTeacher/\" + this.teacher.id, data).then(() => {\n        this.$router.push('/listTeachers'); // переходим к списку учебных дисциплин\n      }).catch(e => {\n        console.log(e);\n      });\n      this.submitted = true;\n    },\n    deleteTeacher() {\n      http.post(\"/deleteTeacher/\" + this.teacher.id).then(() => {\n        this.$router.push('/listTeachers');\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  },\n  mounted() {\n    // загружаем данные учебной дисциплины\n    this.getTeacher();\n  }\n};","map":{"version":3,"names":["http","name","props","data","teacher","submitted","methods","getTeacher","get","id","then","response","catch","e","console","log","updateTeacher","preventDefault","post","$router","push","deleteTeacher","mounted"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\teacher\\Teacher.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"this.teacher\">\r\n        <h4>Преподаватель</h4>\r\n        <div class=\"col-md-5\" v-if=\"!submitted\">\r\n            <form @submit=\"updateTeacher\">\r\n                <div class=\"form-group mb-3\"><input class=\"form-control\" type=\"text\" name=\"name\" id=\"name\" placeholder=\"ФИО преподавателя\" required v-model=\"teacher.name\"></div>\r\n                <div class=\"form-group mb-3\"><input class=\"btn btn-info\" type=\"submit\" value=\"Обновить\"></div>\r\n            </form>\r\n            <button class=\"btn btn-danger\" v-on:click=\"deleteTeacher()\">Удалить</button>\r\n        </div>\r\n        <div v-else>\r\n            <h4>Вы успешно обновили запись</h4>\r\n            <router-link to=\"/listTeachers\">Вернуться к списку учебных дисциплин</router-link>\r\n        </div>\r\n    </div>\r\n    <div v-else>\r\n        <br>\r\n        <p>Выберите преподавателя</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    export default {\r\n        name: \"teacher-details\",\r\n        props: ['id'],\r\n        data() {\r\n            return {\r\n                teacher: null,\r\n                submitted: false\r\n            };\r\n        },\r\n        methods: {\r\n            getTeacher() {\r\n                http\r\n                    .get(\"/teacher/\" + this.id) \r\n                    .then(response => { // запрос выполнен успешно\r\n                        this.teacher = response.data;\r\n                    })\r\n                    .catch(e => { // запрос выполнен с ошибкой\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            updateTeacher(e) {\r\n                e.preventDefault(); // запрет отправки формы, так как обрабатывать будем с помощью методов axios\r\n                var data = {\r\n                    name: this.teacher.name\r\n                };\r\n\r\n                http\r\n                    .post(\"/updateTeacher/\" + this.teacher.id, data)\r\n                    .then(() => { \r\n                        this.$router.push('/listTeachers'); // переходим к списку учебных дисциплин\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n                this.submitted = true;\r\n            },\r\n            deleteTeacher() {\r\n                http\r\n                    .post(\"/deleteTeacher/\" + this.teacher.id)\r\n                    .then(() => {\r\n                        this.$router.push('/listTeachers');\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            }\r\n        },\r\n        mounted() { // загружаем данные учебной дисциплины\r\n            this.getTeacher();\r\n        }\r\n    }\r\n</script>"],"mappings":";AAsBI,OAAOA,IAAG,MAAO,mBAAmB;AACpC,eAAe;EACXC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE;IACf,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAAA,EAAG;MACTP,IAAG,CACEQ,GAAG,CAAC,WAAU,GAAI,IAAI,CAACC,EAAE,EACzBC,IAAI,CAACC,QAAO,IAAK;QAAE;QAChB,IAAI,CAACP,OAAM,GAAIO,QAAQ,CAACR,IAAI;MAChC,CAAC,EACAS,KAAK,CAACC,CAAA,IAAK;QAAE;QACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB,CAAC,CAAC;IACV,CAAC;IACDG,aAAaA,CAACH,CAAC,EAAE;MACbA,CAAC,CAACI,cAAc,CAAC,CAAC,EAAE;MACpB,IAAId,IAAG,GAAI;QACPF,IAAI,EAAE,IAAI,CAACG,OAAO,CAACH;MACvB,CAAC;MAEDD,IAAG,CACEkB,IAAI,CAAC,iBAAgB,GAAI,IAAI,CAACd,OAAO,CAACK,EAAE,EAAEN,IAAI,EAC9CO,IAAI,CAAC,MAAM;QACR,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC,EAAE;MACxC,CAAC,EACAR,KAAK,CAACC,CAAA,IAAK;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB,CAAC,CAAC;MACN,IAAI,CAACR,SAAQ,GAAI,IAAI;IACzB,CAAC;IACDgB,aAAaA,CAAA,EAAG;MACZrB,IAAG,CACEkB,IAAI,CAAC,iBAAgB,GAAI,IAAI,CAACd,OAAO,CAACK,EAAE,EACxCC,IAAI,CAAC,MAAM;QACR,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;MACtC,CAAC,EACAR,KAAK,CAACC,CAAA,IAAK;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB,CAAC,CAAC;IACV;EACJ,CAAC;EACDS,OAAOA,CAAA,EAAG;IAAE;IACR,IAAI,CAACf,UAAU,CAAC,CAAC;EACrB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}