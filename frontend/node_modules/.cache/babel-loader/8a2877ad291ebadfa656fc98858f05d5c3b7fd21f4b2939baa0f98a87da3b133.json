{"ast":null,"code":"import http from \"../../http-common\";\nexport default {\n  name: \"AddQuestions\",\n  data() {\n    return {\n      question: {\n        id: null,\n        quiz_id: this.$route.params.quizId,\n        text: \"\",\n        correctAnswer: \"\",\n        wrongAnswer1: \"\",\n        wrongAnswer2: \"\",\n        wrongAnswer3: \"\"\n      },\n      questions: [],\n      // список вопросов\n      selectedQuestion: null,\n      // выбранный для показа вопрос\n      selectedAnswers: [] // ответы к выбранному вопросу\n    };\n  },\n  created() {\n    // Загружаем список вопросов при создании компонента\n    this.getQuestions();\n  },\n  methods: {\n    // Метод для добавления нового вопроса\n    addQuestion(e) {\n      e.preventDefault(); // Остановка отправки формы\n      var data = {\n        quiz_id: this.question.quiz_id,\n        question_text: this.question.text,\n        correctAnswer: this.question.correctAnswer,\n        wrongAnswer1: this.question.wrongAnswer1,\n        wrongAnswer2: this.question.wrongAnswer2,\n        wrongAnswer3: this.question.wrongAnswer3\n      };\n\n      // Отправка данных на сервер\n      http.post(\"/addQuestion\", data).then(response => {\n        this.getQuestions(); // Обновляем список вопросов\n        this.clearForm(); // Очищаем форму\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    // Метод для получения всех вопросов по викторине\n    getQuestions() {\n      http.get(`/api/getQuestions/${this.$route.params.quizId}`).then(response => {\n        this.questions = response.data;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    // Метод для показа ответов к вопросу\n    showAnswers(questionId) {\n      http.get(`/api/getAnswers/${questionId}`).then(response => {\n        this.selectedAnswers = response.data;\n        this.selectedQuestion = this.questions.find(q => q.id === questionId);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    // Метод для редактирования вопроса\n    editQuestion(question) {\n      this.question = {\n        ...question\n      };\n    },\n    // Метод для удаления вопроса с подтверждением\n    confirmDelete(questionId) {\n      if (confirm(\"Вы уверены, что хотите удалить этот вопрос?\")) {\n        this.deleteQuestion(questionId);\n      }\n    },\n    // Метод для удаления вопроса\n    deleteQuestion(questionId) {\n      http.delete(`/api/deleteQuestion/${questionId}`).then(response => {\n        this.getQuestions(); // Обновляем список вопросов\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    // Метод для очистки формы после добавления вопроса\n    clearForm() {\n      this.question = {\n        id: null,\n        quiz_id: this.$route.params.quizId,\n        text: \"\",\n        correctAnswer: \"\",\n        wrongAnswer1: \"\",\n        wrongAnswer2: \"\",\n        wrongAnswer3: \"\"\n      };\n    }\n  }\n};","map":{"version":3,"names":["http","name","data","question","id","quiz_id","$route","params","quizId","text","correctAnswer","wrongAnswer1","wrongAnswer2","wrongAnswer3","questions","selectedQuestion","selectedAnswers","created","getQuestions","methods","addQuestion","e","preventDefault","question_text","post","then","response","clearForm","catch","console","log","get","showAnswers","questionId","find","q","editQuestion","confirmDelete","confirm","deleteQuestion","delete"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\quiz\\AddQuestions.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-5\">\r\n        <!-- Заголовок над карточкой -->\r\n        <h4 class=\"text-center mb-4\">Добавление вопросов к викторине</h4>\r\n\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-md-8\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <form @submit=\"addQuestion\">\r\n                            <!-- Поле для текста вопроса -->\r\n                            <div class=\"form-group mb-3\">\r\n                                <label for=\"questionText\">Текст вопроса:</label>\r\n                                <textarea\r\n                                    class=\"form-control\"\r\n                                    id=\"questionText\"\r\n                                    placeholder=\"Введите вопрос\"\r\n                                    required\r\n                                    v-model=\"question.text\"\r\n                                    rows=\"2\"\r\n                                ></textarea>\r\n                            </div>\r\n\r\n                            <!-- Поле для правильного ответа -->\r\n                            <div class=\"form-group mb-3\">\r\n                                <label for=\"correctAnswer\">Правильный ответ:</label>\r\n                                <input\r\n                                    class=\"form-control\"\r\n                                    type=\"text\"\r\n                                    id=\"correctAnswer\"\r\n                                    placeholder=\"Введите правильный ответ\"\r\n                                    required\r\n                                    v-model=\"question.correctAnswer\"\r\n                                />\r\n                            </div>\r\n\r\n                            <!-- Поля для неправильных ответов -->\r\n                            <div class=\"form-group mb-3\">\r\n                                <label>Неправильные ответы:</label>\r\n                                <input\r\n                                    class=\"form-control mb-2\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Неправильный ответ 1\"\r\n                                    required\r\n                                    v-model=\"question.wrongAnswer1\"\r\n                                />\r\n                                <input\r\n                                    class=\"form-control mb-2\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Неправильный ответ 2\"\r\n                                    required\r\n                                    v-model=\"question.wrongAnswer2\"\r\n                                />\r\n                                <input\r\n                                    class=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Неправильный ответ 3\"\r\n                                    required\r\n                                    v-model=\"question.wrongAnswer3\"\r\n                                />\r\n                            </div>\r\n\r\n                            <!-- Кнопка добавления вопроса -->\r\n                            <div class=\"form-group mb-3\">\r\n                                <input class=\"btn btn-success w-100\" type=\"submit\" value=\"Добавить вопрос\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Список добавленных вопросов -->\r\n                <div v-if=\"questions.length\" class=\"mt-4\">\r\n                    <h5>Список добавленных вопросов:</h5>\r\n                    <ul class=\"list-group\">\r\n                        <li v-for=\"q in questions\" :key=\"q.id\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            {{ q.question_text }}\r\n                            <div>\r\n                                <button class=\"btn btn-sm btn-info mr-2\" @click=\"showAnswers(q.id)\">Показать ответы</button>\r\n                                <button class=\"btn btn-sm btn-primary mr-2\" @click=\"editQuestion(q)\">Изменить</button>\r\n                                <button class=\"btn btn-sm btn-danger\" @click=\"confirmDelete(q.id)\">Удалить</button>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <!-- Модальное окно с ответами -->\r\n                <div v-if=\"selectedAnswers.length\" class=\"mt-4\">\r\n                    <h5>Ответы для вопроса: {{ selectedQuestion.text }}</h5>\r\n                    <ul class=\"list-group\">\r\n                        <li v-for=\"a in selectedAnswers\" :key=\"a.id\" class=\"list-group-item\" :class=\"{'list-group-item-success': a.is_correct}\">\r\n                            {{ a.answer_text }} <span v-if=\"a.is_correct\">(Правильный)</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"../../http-common\";\r\n\r\nexport default {\r\n    name: \"AddQuestions\",\r\n    data() {\r\n        return {\r\n            question: {\r\n                id: null,\r\n                quiz_id: this.$route.params.quizId,\r\n                text: \"\",\r\n                correctAnswer: \"\",\r\n                wrongAnswer1: \"\",\r\n                wrongAnswer2: \"\",\r\n                wrongAnswer3: \"\"\r\n            },\r\n            questions: [], // список вопросов\r\n            selectedQuestion: null, // выбранный для показа вопрос\r\n            selectedAnswers: [] // ответы к выбранному вопросу\r\n        };\r\n    },\r\n    created() {\r\n        // Загружаем список вопросов при создании компонента\r\n        this.getQuestions();\r\n    },\r\n    methods: {\r\n        // Метод для добавления нового вопроса\r\n        addQuestion(e) {\r\n            e.preventDefault(); // Остановка отправки формы\r\n            var data = {\r\n                quiz_id: this.question.quiz_id,\r\n                question_text: this.question.text,\r\n                correctAnswer: this.question.correctAnswer,\r\n                wrongAnswer1: this.question.wrongAnswer1,\r\n                wrongAnswer2: this.question.wrongAnswer2,\r\n                wrongAnswer3: this.question.wrongAnswer3\r\n            };\r\n\r\n            // Отправка данных на сервер\r\n            http\r\n                .post(\"/addQuestion\", data)\r\n                .then(response => {\r\n                    this.getQuestions(); // Обновляем список вопросов\r\n                    this.clearForm(); // Очищаем форму\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        },\r\n\r\n        // Метод для получения всех вопросов по викторине\r\n        getQuestions() {\r\n            http\r\n                .get(`/api/getQuestions/${this.$route.params.quizId}`)\r\n                .then(response => {\r\n                    this.questions = response.data;\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        },\r\n\r\n        // Метод для показа ответов к вопросу\r\n        showAnswers(questionId) {\r\n            http\r\n                .get(`/api/getAnswers/${questionId}`)\r\n                .then(response => {\r\n                    this.selectedAnswers = response.data;\r\n                    this.selectedQuestion = this.questions.find(q => q.id === questionId);\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        },\r\n\r\n        // Метод для редактирования вопроса\r\n        editQuestion(question) {\r\n            this.question = { ...question };\r\n        },\r\n\r\n        // Метод для удаления вопроса с подтверждением\r\n        confirmDelete(questionId) {\r\n            if (confirm(\"Вы уверены, что хотите удалить этот вопрос?\")) {\r\n                this.deleteQuestion(questionId);\r\n            }\r\n        },\r\n\r\n        // Метод для удаления вопроса\r\n        deleteQuestion(questionId) {\r\n            http\r\n                .delete(`/api/deleteQuestion/${questionId}`)\r\n                .then(response => {\r\n                    this.getQuestions(); // Обновляем список вопросов\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        },\r\n\r\n        // Метод для очистки формы после добавления вопроса\r\n        clearForm() {\r\n            this.question = {\r\n                id: null,\r\n                quiz_id: this.$route.params.quizId,\r\n                text: \"\",\r\n                correctAnswer: \"\",\r\n                wrongAnswer1: \"\",\r\n                wrongAnswer2: \"\",\r\n                wrongAnswer3: \"\"\r\n            };\r\n        }\r\n    }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}