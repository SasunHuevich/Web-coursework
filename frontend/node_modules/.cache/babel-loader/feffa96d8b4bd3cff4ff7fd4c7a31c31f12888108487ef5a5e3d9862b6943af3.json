{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"../../http-common\";\nexport default {\n  name: \"studentGroup-details\",\n  props: ['id'],\n  data() {\n    return {\n      studentGroup: null,\n      submitted: false\n    };\n  },\n  methods: {\n    getStudentGroup() {\n      http.get(\"/studentGroup/\" + this.id) // обращаемся к серверу для получения данных студенческой группы, id взят из входных параметров (props)\n      .then(response => {\n        // запрос выполнен успешно\n        this.studentGroup = response.data;\n      }).catch(e => {\n        // запрос выполнен с ошибкой\n        console.log(e);\n      });\n    },\n    updateStudentGroup(e) {\n      e.preventDefault(); // запрет отправки формы, так как обрабатывать будем с помощью методов axios\n      var data = {\n        name: this.studentGroup.name\n      };\n      http.post(\"/updateStudentGroup/\" + this.studentGroup.id, data).then(() => {\n        // при успешном обновлении можно добавить, например, вывод уведомления\n        this.$router.push('/listStudentGroups'); // переходим к списку учебных дисциплин\n      }).catch(e => {\n        console.log(e);\n      });\n      this.submitted = true;\n    },\n    deleteStudentGroup() {\n      http.post(\"/deleteStudentGroup/\" + this.studentGroup.id).then(() => {\n        // переходим к списку студенческих групп (переход по ссылкам программно)\n        this.$router.push('/listStudentGroups');\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  },\n  mounted() {\n    // загружаем данные учебной дисциплины\n    this.getStudentGroup();\n  }\n};","map":{"version":3,"names":["http","name","props","data","studentGroup","submitted","methods","getStudentGroup","get","id","then","response","catch","e","console","log","updateStudentGroup","preventDefault","post","$router","push","deleteStudentGroup","mounted"],"sources":["C:\\Users\\Samedi\\Documents\\SecondProject\\SecondProject\\frontend\\src\\components\\studentGroup\\StudentGroup.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"this.studentGroup\">\r\n        <h4>Студенческая группа</h4>\r\n        <div class=\"col-md-5\" v-if=\"!submitted\">\r\n            <form @submit=\"updateStudentGroup\">\r\n                <div class=\"form-group mb-3\"><input class=\"form-control\" type=\"text\" name=\"name\" id=\"name\" placeholder=\"Название учебной группы\" required v-model=\"studentGroup.name\"></div>\r\n                <div class=\"form-group mb-3\"><input class=\"btn btn-info\" type=\"submit\" value=\"Обновить\"></div>\r\n            </form>\r\n            <button class=\"btn btn-danger\" v-on:click=\"deleteStudentGroup()\">Удалить</button>\r\n        </div>\r\n        <div class=\"col-md-5\" v-else>\r\n            <h4>Вы успешно обновили запись</h4>\r\n            <router-link to=\"/listStudentGroups\">Вернуться к списку студенческих групп</router-link>\r\n        </div>\r\n    </div>\r\n    <div v-else>\r\n        <br>\r\n        <p>Выберите студенческую группу</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    export default {\r\n        name: \"studentGroup-details\",\r\n        props: ['id'],\r\n        data() {\r\n            return {\r\n                studentGroup: null,\r\n                submitted: false\r\n            };\r\n        },\r\n        methods: {\r\n            getStudentGroup() {\r\n                http\r\n                    .get(\"/studentGroup/\" + this.id) // обращаемся к серверу для получения данных студенческой группы, id взят из входных параметров (props)\r\n                    .then(response => { // запрос выполнен успешно\r\n                        this.studentGroup = response.data;\r\n                    })\r\n                    .catch(e => { // запрос выполнен с ошибкой\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            updateStudentGroup(e) {\r\n                e.preventDefault(); // запрет отправки формы, так как обрабатывать будем с помощью методов axios\r\n                var data = {\r\n                    name: this.studentGroup.name\r\n                };\r\n\r\n                http\r\n                    .post(\"/updateStudentGroup/\" + this.studentGroup.id, data)\r\n                    .then(() => { // при успешном обновлении можно добавить, например, вывод уведомления\r\n                        this.$router.push('/listStudentGroups'); // переходим к списку учебных дисциплин\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n                this.submitted = true;\r\n            },\r\n            deleteStudentGroup() {\r\n                http\r\n                    .post(\"/deleteStudentGroup/\" + this.studentGroup.id)\r\n                    .then(() => {\r\n                        // переходим к списку студенческих групп (переход по ссылкам программно)\r\n                        this.$router.push('/listStudentGroups');\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            }\r\n        },\r\n        mounted() { // загружаем данные учебной дисциплины\r\n            this.getStudentGroup();\r\n        }\r\n    }\r\n</script>"],"mappings":";AAsBI,OAAOA,IAAG,MAAO,mBAAmB;AACpC,eAAe;EACXC,IAAI,EAAE,sBAAsB;EAC5BC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE;IACf,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,eAAeA,CAAA,EAAG;MACdP,IAAG,CACEQ,GAAG,CAAC,gBAAe,GAAI,IAAI,CAACC,EAAE,EAAE;MAAA,CAChCC,IAAI,CAACC,QAAO,IAAK;QAAE;QAChB,IAAI,CAACP,YAAW,GAAIO,QAAQ,CAACR,IAAI;MACrC,CAAC,EACAS,KAAK,CAACC,CAAA,IAAK;QAAE;QACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB,CAAC,CAAC;IACV,CAAC;IACDG,kBAAkBA,CAACH,CAAC,EAAE;MAClBA,CAAC,CAACI,cAAc,CAAC,CAAC,EAAE;MACpB,IAAId,IAAG,GAAI;QACPF,IAAI,EAAE,IAAI,CAACG,YAAY,CAACH;MAC5B,CAAC;MAEDD,IAAG,CACEkB,IAAI,CAAC,sBAAqB,GAAI,IAAI,CAACd,YAAY,CAACK,EAAE,EAAEN,IAAI,EACxDO,IAAI,CAAC,MAAM;QAAE;QACV,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC,EAAE;MAC7C,CAAC,EACAR,KAAK,CAACC,CAAA,IAAK;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB,CAAC,CAAC;MACN,IAAI,CAACR,SAAQ,GAAI,IAAI;IACzB,CAAC;IACDgB,kBAAkBA,CAAA,EAAG;MACjBrB,IAAG,CACEkB,IAAI,CAAC,sBAAqB,GAAI,IAAI,CAACd,YAAY,CAACK,EAAE,EAClDC,IAAI,CAAC,MAAM;QACR;QACA,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;MAC3C,CAAC,EACAR,KAAK,CAACC,CAAA,IAAK;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB,CAAC,CAAC;IACV;EACJ,CAAC;EACDS,OAAOA,CAAA,EAAG;IAAE;IACR,IAAI,CAACf,eAAe,CAAC,CAAC;EAC1B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}