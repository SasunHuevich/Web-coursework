{"ast":null,"code":"export default {\n  name: 'RegisterUser',\n  data() {\n    return {\n      user: {\n        username: \"\",\n        password: \"\"\n      },\n      successful: false,\n      successMessage: '',\n      errorMessage: ''\n    };\n  },\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n  },\n  mounted() {\n    if (this.loggedIn) {\n      // Авторизация прошла успешно, переходим к главной странице.\n      // Используем такую конструкцию, а не this.$router.push, так как требуется перезагрузить страницу для обновления локального хранилища\n      window.location.href = '/';\n    }\n  },\n  methods: {\n    handleRegister(e) {\n      e.preventDefault();\n      this.successMessage = '';\n      this.errorMessage = '';\n      this.$store.dispatch(\"auth/register\", this.user) // обращаемся к методу register, который определён в auth.service.js\n      .then(data => {\n        this.successMessage = data.message;\n        this.successful = true;\n      }).catch(e => {\n        this.errorMessage = e.response.data.message;\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","username","password","successful","successMessage","errorMessage","computed","loggedIn","$store","state","auth","status","mounted","window","location","href","methods","handleRegister","e","preventDefault","dispatch","then","message","catch","response"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\authorization\\Register.vue"],"sourcesContent":["<template>\r\n    <div class=\"col-md-5\">\r\n      <h4 class=\"mx-auto mt-4\">Регистрация пользователя</h4>\r\n      <form name=\"form\" @submit=\"handleRegister\">\r\n        <div v-if=\"!successful\">\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Логин\" v-model=\"user.username\" required/>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Пароль\" v-model=\"user.password\" required/>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <button class=\"btn btn-primary\">Зарегистрировать</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div v-if=\"successMessage\" class=\"alert alert-success\" role=\"alert\">{{successMessage}}</div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div v-if=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">{{errorMessage}}</div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  export default {\r\n    name: 'RegisterUser',\r\n    data() {\r\n      return {\r\n        user: {\r\n          username: \"\",\r\n          password: \"\"\r\n        },\r\n        successful: false,\r\n        successMessage: '',\r\n        errorMessage: ''\r\n      };\r\n    },\r\n    computed: {\r\n      loggedIn() {\r\n        return this.$store.state.auth.status.loggedIn;\r\n      }\r\n    },\r\n    mounted() {\r\n      if (this.loggedIn) {\r\n        // Авторизация прошла успешно, переходим к главной странице.\r\n        // Используем такую конструкцию, а не this.$router.push, так как требуется перезагрузить страницу для обновления локального хранилища\r\n        window.location.href = '/';\r\n      }\r\n    },\r\n    methods: {\r\n      handleRegister(e) {\r\n        e.preventDefault();\r\n        this.successMessage = '';\r\n        this.errorMessage = '';\r\n        this.$store.dispatch(\"auth/register\", this.user) // обращаемся к методу register, который определён в auth.service.js\r\n            .then(data => {\r\n              this.successMessage = data.message;\r\n              this.successful = true;\r\n            })\r\n            .catch(e => {\r\n              this.errorMessage = e.response.data.message;\r\n            });\r\n      }\r\n    }\r\n  };\r\n  </script>"],"mappings":"AAyBE,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,UAAU,EAAE,KAAK;MACjBC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACJ,QAAQ;IAC/C;EACF,CAAC;EACDK,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACL,QAAQ,EAAE;MACjB;MACA;MACAM,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,GAAG;IAC5B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACC,CAAC,EAAE;MAChBA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,IAAI,CAACf,cAAa,GAAI,EAAE;MACxB,IAAI,CAACC,YAAW,GAAI,EAAE;MACtB,IAAI,CAACG,MAAM,CAACY,QAAQ,CAAC,eAAe,EAAE,IAAI,CAACpB,IAAI,EAAE;MAAA,CAC5CqB,IAAI,CAACtB,IAAG,IAAK;QACZ,IAAI,CAACK,cAAa,GAAIL,IAAI,CAACuB,OAAO;QAClC,IAAI,CAACnB,UAAS,GAAI,IAAI;MACxB,CAAC,EACAoB,KAAK,CAACL,CAAA,IAAK;QACV,IAAI,CAACb,YAAW,GAAIa,CAAC,CAACM,QAAQ,CAACzB,IAAI,CAACuB,OAAO;MAC7C,CAAC,CAAC;IACR;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}