{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Список студентов\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"list-group mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.students, (student, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"list-group-item\",\n      key: index\n    }, [_createVNode(_component_router_link, {\n      to: {\n        name: 'attestation-book',\n        params: {\n          student_id: student.id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(student.name), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","students","student","index","key","_createVNode","_component_router_link","to","id","default","_withCtx","_createTextVNode","_toDisplayString","name","_"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\attestationBook\\ListStudents.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h4>Список студентов</h4>\r\n        <ul class=\"list-group mt-3\">\r\n            <li class=\"list-group-item\" v-for=\"(student, index) in students\" :key=\"index\">\r\n                <router-link :to=\"{\r\n                    name: 'attestation-book',\r\n                    params: { student_id: student.id}\r\n                }\">\r\n                    {{ student.name }}\r\n                </router-link>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"../../http-common\";\r\nexport default {\r\n    name: \"attestation-book-students\", \r\n    props: ['student_group_id'],\r\n    data() {\r\n        return {\r\n            students: []\r\n        };\r\n    },\r\n    methods: {\r\n        getStudents() {\r\n            http\r\n                .get(\"/attestationBook/group/\" + this.student_group_id)\r\n                .then(response => {\r\n                    this.students = response.data;\r\n                    console.log(this.students);\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getStudents();\r\n    }\r\n}\r\n</script>\r\n  \r\n<style></style>"],"mappings":";gCAEQA,mBAAA,CAAyB,YAArB,kBAAgB;;EAChBC,KAAK,EAAC;AAAiB;;;uBAF/BC,mBAAA,CAYM,cAXFC,UAAyB,EACzBH,mBAAA,CASK,MATLI,UASK,I,kBARDF,mBAAA,CAOKG,SAAA,QAXjBC,WAAA,CAImEC,KAAA,CAAAC,QAAQ,EAJ3E,CAIgDC,OAAO,EAAEC,KAAK;yBAAlDR,mBAAA,CAOK;MAPDD,KAAK,EAAC,iBAAiB;MAAuCU,GAAG,EAAED;QACnEE,YAAA,CAKcC,sBAAA;MALAC,EAAE;;;sBAA8FL,OAAO,CAACM;QAAE;;;MALxIC,OAAA,EAAAC,QAAA,CASoB,MAAkB,CATtCC,gBAAA,CAAAC,gBAAA,CASuBV,OAAO,CAACW,IAAI,iB;MATnCC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}