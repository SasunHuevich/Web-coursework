{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"../../http-common\";\nexport default {\n  name: \"AddStudent\",\n  data() {\n    return {\n      student: {\n        name: \"\",\n        student_group_id: null\n      },\n      studentGroups: []\n    };\n  },\n  methods: {\n    addStudent(e) {\n      e.preventDefault(); // запрет отправки формы, так как обрабатывать будем с помощью методов axios\n      var data = {\n        name: this.student.name,\n        student_group_id: this.student.student_group_id\n      };\n      http.post(\"/addStudent\", data).then(() => {\n        // запрос выполнился успешно\n        this.$router.push('/listStudents'); // переходим к списку студентов\n      }).catch(e => {\n        // при выполнении запроса возникли ошибки\n        console.log(e);\n      });\n    },\n    getStudentGroups() {\n      // получаем список студенческих групп для выпадающего списка\n      http.get(\"/listStudentGroups\").then(response => {\n        this.studentGroups = response.data;\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  },\n  mounted() {\n    // при монтировании компонента подгружаем список групп\n    this.getStudentGroups();\n  }\n};","map":{"version":3,"names":["http","name","data","student","student_group_id","studentGroups","methods","addStudent","e","preventDefault","post","then","$router","push","catch","console","log","getStudentGroups","get","response","mounted"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\student\\AddStudent.vue"],"sourcesContent":["<template>\r\n    <div class=\"col-md-5\">\r\n        <h4>Добавление студента</h4>\r\n        <form @submit=\"addStudent\">\r\n            <div class=\"form-group mb-3\">\r\n                <input class=\"form-control\" type=\"text\" name=\"name\" id=\"name\" placeholder=\"ФИО\" required v-model=\"student.name\">\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <select class=\"form-select\" required v-model=\"student.student_group_id\">\r\n                    <option value=\"\" disabled selected>Выберите студенческую группу</option>\r\n                    <option v-for=\"studentGroup in studentGroups\" v-bind:key=\"studentGroup.id\" v-bind:value=\"studentGroup.id\">\r\n                        {{studentGroup.name}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <input class=\"btn btn-success\" type=\"submit\" value=\"Добавить\">\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    export default {\r\n        name: \"AddStudent\",\r\n        data() {\r\n            return {\r\n                student: {\r\n                    name: \"\",\r\n                    student_group_id: null\r\n                },\r\n                studentGroups: []\r\n            };\r\n        },\r\n        methods: {\r\n            addStudent(e) {\r\n                e.preventDefault(); // запрет отправки формы, так как обрабатывать будем с помощью методов axios\r\n                var data = {\r\n                    name: this.student.name,\r\n                    student_group_id: this.student.student_group_id\r\n                };\r\n                http\r\n                    .post(\"/addStudent\", data)\r\n                    .then(() => { // запрос выполнился успешно\r\n                        this.$router.push('/listStudents'); // переходим к списку студентов\r\n                    })\r\n                    .catch(e => { // при выполнении запроса возникли ошибки\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            getStudentGroups() { // получаем список студенческих групп для выпадающего списка\r\n                http\r\n                    .get(\"/listStudentGroups\")\r\n                    .then(response => {\r\n                        this.studentGroups = response.data;\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            }\r\n        },\r\n        mounted(){ // при монтировании компонента подгружаем список групп\r\n            this.getStudentGroups();\r\n        }\r\n    }\r\n</script>"],"mappings":";AAuBI,OAAOA,IAAG,MAAO,mBAAmB;AACpC,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE;QACLF,IAAI,EAAE,EAAE;QACRG,gBAAgB,EAAE;MACtB,CAAC;MACDC,aAAa,EAAE;IACnB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAACC,CAAC,EAAE;MACVA,CAAC,CAACC,cAAc,CAAC,CAAC,EAAE;MACpB,IAAIP,IAAG,GAAI;QACPD,IAAI,EAAE,IAAI,CAACE,OAAO,CAACF,IAAI;QACvBG,gBAAgB,EAAE,IAAI,CAACD,OAAO,CAACC;MACnC,CAAC;MACDJ,IAAG,CACEU,IAAI,CAAC,aAAa,EAAER,IAAI,EACxBS,IAAI,CAAC,MAAM;QAAE;QACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC,EAAE;MACxC,CAAC,EACAC,KAAK,CAACN,CAAA,IAAK;QAAE;QACVO,OAAO,CAACC,GAAG,CAACR,CAAC,CAAC;MAClB,CAAC,CAAC;IACV,CAAC;IACDS,gBAAgBA,CAAA,EAAG;MAAE;MACjBjB,IAAG,CACEkB,GAAG,CAAC,oBAAoB,EACxBP,IAAI,CAACQ,QAAO,IAAK;QACd,IAAI,CAACd,aAAY,GAAIc,QAAQ,CAACjB,IAAI;MACtC,CAAC,EACAY,KAAK,CAACN,CAAA,IAAK;QACRO,OAAO,CAACC,GAAG,CAACR,CAAC,CAAC;MAClB,CAAC,CAAC;IACV;EACJ,CAAC;EACDY,OAAOA,CAAA,EAAE;IAAE;IACP,IAAI,CAACH,gBAAgB,CAAC,CAAC;EAC3B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}