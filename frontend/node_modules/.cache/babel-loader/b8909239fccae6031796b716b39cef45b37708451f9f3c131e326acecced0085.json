{"ast":null,"code":"import http from \"../../http-common\";\nexport default {\n  name: \"AddTeacher\",\n  data() {\n    return {\n      teacher: {\n        id: null,\n        name: \"\"\n      },\n      submitted: false\n    };\n  },\n  methods: {\n    addTeacher(e) {\n      e.preventDefault(); // запрет отправки формы, так как обрабатывать будем с помощью методов axios\n      var data = {\n        name: this.teacher.name\n      };\n      // Либо var data = this.user;\n      http.post(\"/addTeacher\", data).then(response => {\n        // запрос выполнился успешно\n        this.teacher.id = response.data.id;\n      }).catch(e => {\n        // при выполнении запроса возникли ошибки\n        console.log(e);\n      });\n      this.submitted = true;\n    },\n    newTeacher() {\n      this.submitted = false;\n      this.teacher = {\n        id: null,\n        name: \"\"\n      };\n    }\n  }\n};","map":{"version":3,"names":["http","name","data","teacher","id","submitted","methods","addTeacher","e","preventDefault","post","then","response","catch","console","log","newTeacher"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\teacher\\AddTeacher.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h4>Добавление преподавателя</h4>\r\n        <div class=\"col-md-5\" v-if=\"!submitted\">\r\n            <!--В @submit указывается обработчик, который выполнится после нажатия на кнопку \"Добавить\"\r\n            Обработчик addTeacher определён в script-->\r\n            <form @submit=\"addTeacher\">\r\n                <!--v-model - директива для связывания данных с элементами.\r\n                Связь происходит при помощи переменных, которые определены в data()-->\r\n                <div class=\"form-group mb-3\"><input class=\"form-control\" type=\"text\" name=\"name\" id=\"name\" placeholder=\"ФИО преподавателя\" required v-model=\"teacher.name\"></div>\r\n                <div class=\"form-group mb-3\"><input class=\"btn btn-success\" type=\"submit\" value=\"Добавить\"></div>\r\n            </form>\r\n        </div>\r\n        <div class=\"col-md-5\" v-else>\r\n            <h4>Вы успешно добавили запись</h4>\r\n            <div class=\"form-group mb-3\">\r\n                <!--В v-on:click указывается обработчик, который выполниться после нажатия на кнопку \"Добавить преподавателя\"\r\n                Обработчик newTeacher определён в script-->\r\n                <button class=\"btn btn-success\" v-on:click=\"newTeacher\">Добавить преподавателя</button>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <router-link class=\"btn btn-light\" to=\"/listTeachers\">Вернуться к списку преподавателей</router-link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    export default {\r\n        name: \"AddTeacher\",\r\n        data() {\r\n            return {\r\n                teacher: {\r\n                    id: null,\r\n                    name: \"\"\r\n                },\r\n                submitted: false\r\n            };\r\n        },\r\n        methods: {\r\n            addTeacher(e) {\r\n                e.preventDefault(); // запрет отправки формы, так как обрабатывать будем с помощью методов axios\r\n                var data = {\r\n                    name: this.teacher.name\r\n                };\r\n                // Либо var data = this.user;\r\n                http\r\n                    .post(\"/addTeacher\", data)\r\n                    .then(response => { // запрос выполнился успешно\r\n                        this.teacher.id = response.data.id;\r\n                    })\r\n                    .catch(e => { // при выполнении запроса возникли ошибки\r\n                        console.log(e);\r\n                    });\r\n\r\n                this.submitted = true;\r\n            },\r\n            newTeacher() {\r\n                this.submitted = false;\r\n                this.teacher = {\r\n                    id: null,\r\n                    name: \"\"\r\n                };\r\n            }\r\n        }\r\n    }\r\n</script>"],"mappings":"AA4BI,OAAOA,IAAG,MAAO,mBAAmB;AACpC,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE;QACLC,EAAE,EAAE,IAAI;QACRH,IAAI,EAAE;MACV,CAAC;MACDI,SAAS,EAAE;IACf,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAACC,CAAC,EAAE;MACVA,CAAC,CAACC,cAAc,CAAC,CAAC,EAAE;MACpB,IAAIP,IAAG,GAAI;QACPD,IAAI,EAAE,IAAI,CAACE,OAAO,CAACF;MACvB,CAAC;MACD;MACAD,IAAG,CACEU,IAAI,CAAC,aAAa,EAAER,IAAI,EACxBS,IAAI,CAACC,QAAO,IAAK;QAAE;QAChB,IAAI,CAACT,OAAO,CAACC,EAAC,GAAIQ,QAAQ,CAACV,IAAI,CAACE,EAAE;MACtC,CAAC,EACAS,KAAK,CAACL,CAAA,IAAK;QAAE;QACVM,OAAO,CAACC,GAAG,CAACP,CAAC,CAAC;MAClB,CAAC,CAAC;MAEN,IAAI,CAACH,SAAQ,GAAI,IAAI;IACzB,CAAC;IACDW,UAAUA,CAAA,EAAG;MACT,IAAI,CAACX,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACF,OAAM,GAAI;QACXC,EAAE,EAAE,IAAI;QACRH,IAAI,EAAE;MACV,CAAC;IACL;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}