{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3a3aafdb\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"text-center mb-4\"\n}, \"Ваши викторины\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0,\n  class: \"row justify-content-center\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-8\"\n};\nconst _hoisted_5 = {\n  class: \"list-group\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"text-center\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"У вас пока нет созданных викторин.\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, $data.quizzes.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", _hoisted_5, [_createCommentVNode(\" Перебор списка викторин, вывод каждой викторины с кнопками изменения и удаления \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.quizzes, quiz => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: quiz.id,\n      class: \"list-group-item d-flex justify-content-between align-items-center\"\n    }, [_createCommentVNode(\" Название викторины \"), _createElementVNode(\"span\", null, _toDisplayString(quiz.name), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createCommentVNode(\" Кнопка редактирования \"), _createElementVNode(\"button\", {\n      class: \"btn btn-sm btn-info mr-2\",\n      onClick: $event => $options.editQuiz(quiz.id)\n    }, \"Изменить\", 8 /* PROPS */, _hoisted_6), _createCommentVNode(\" Кнопка удаления \"), _createElementVNode(\"button\", {\n      class: \"btn btn-sm btn-danger\",\n      onClick: $event => $options.confirmDelete(quiz.id)\n    }, \"Удалить\", 8 /* PROPS */, _hoisted_7)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Если у пользователя нет викторин \"), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createVNode(_component_router_link, {\n    to: \"/addQuiz1\",\n    class: \"btn btn-primary\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Создать новую викторину\")]),\n    _: 1 /* STABLE */\n  })])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","$data","quizzes","length","_hoisted_3","_hoisted_4","_hoisted_5","_createCommentVNode","_Fragment","_renderList","quiz","id","_toDisplayString","name","onClick","$event","$options","editQuiz","_hoisted_6","confirmDelete","_hoisted_7","_hoisted_8","_hoisted_9","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\quiz\\MyQuiz.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-5\">\r\n      <h3 class=\"text-center mb-4\">Ваши викторины</h3>\r\n  \r\n      <div v-if=\"quizzes.length\" class=\"row justify-content-center\">\r\n        <div class=\"col-md-8\">\r\n          <ul class=\"list-group\">\r\n            <!-- Перебор списка викторин, вывод каждой викторины с кнопками изменения и удаления -->\r\n            <li v-for=\"quiz in quizzes\" :key=\"quiz.id\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              <!-- Название викторины -->\r\n              <span>{{ quiz.name }}</span>\r\n  \r\n              <div>\r\n                <!-- Кнопка редактирования -->\r\n                <button class=\"btn btn-sm btn-info mr-2\" @click=\"editQuiz(quiz.id)\">Изменить</button>\r\n                <!-- Кнопка удаления -->\r\n                <button class=\"btn btn-sm btn-danger\" @click=\"confirmDelete(quiz.id)\">Удалить</button>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Если у пользователя нет викторин -->\r\n      <div v-else class=\"text-center\">\r\n        <p>У вас пока нет созданных викторин.</p>\r\n        <router-link to=\"/addQuiz1\" class=\"btn btn-primary\">Создать новую викторину</router-link>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import http from \"../../http-common\";\r\n  \r\n  export default {\r\n    name: \"UserQuizzes\",\r\n    data() {\r\n      return {\r\n        quizzes: [] // Массив для хранения викторин пользователя\r\n      };\r\n    },\r\n    methods: {\r\n      // Получение списка викторин пользователя\r\n      fetchUserQuizzes() {\r\n        // Подставляем ID пользователя, взятый из сессии или хранилища\r\n        const userId = this.userId;\r\n        console.log(\"GGGGG1\");\r\n        console.log(this.userId);\r\n        http\r\n          .get(`/getQuizzesByUser/${userId}`)\r\n          .then(response => {\r\n            this.quizzes = response.data; // Записываем полученные викторины в массив\r\n          })\r\n          .catch(error => {\r\n            console.log(\"Ошибка при получении викторин: \", error);\r\n          });\r\n      },\r\n  \r\n      // Метод для редактирования викторины\r\n      editQuiz(quizId) {\r\n        // Переход на страницу редактирования викторины с переданным ID\r\n        this.$router.push({ path: `/addQuestions/${quizId}` });\r\n      },\r\n  \r\n      // Метод для подтверждения удаления викторины\r\n      confirmDelete(quizId) {\r\n        if (confirm(\"Вы уверены, что хотите удалить эту викторину?\")) {\r\n          this.deleteQuiz(quizId);\r\n        }\r\n      },\r\n  \r\n      // Метод для удаления викторины\r\n      deleteQuiz(quizId) {\r\n        http\r\n          .delete(`/deleteQuiz/${quizId}`)\r\n          .then(() => {\r\n            this.fetchUserQuizzes(); // Обновляем список после удаления\r\n          })\r\n          .catch(error => {\r\n            console.log(\"Ошибка при удалении викторины: \", error);\r\n          });\r\n      }\r\n    },\r\n    mounted() {\r\n      // Получаем список викторин при монтировании компонента\r\n      this.fetchUserQuizzes();\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Стили для кнопок */\r\n  .btn-info {\r\n    margin-right: 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAgD;EAA5CD,KAAK,EAAC;AAAkB,GAAC,gBAAc;;EAFjDE,GAAA;EAIiCF,KAAK,EAAC;;;EAC1BA,KAAK,EAAC;AAAU;;EACfA,KAAK,EAAC;AAAY;mBANhC;mBAAA;;EAwBkBA,KAAK,EAAC;AAAa;gEAC7BC,mBAAA,CAAyC,WAAtC,oCAAkC;;;uBAxBzCE,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,UAAgD,EAErCC,KAAA,CAAAC,OAAO,CAACC,MAAM,I,cAAzBL,mBAAA,CAiBM,OAjBNM,UAiBM,GAhBJR,mBAAA,CAeM,OAfNS,UAeM,GAdJT,mBAAA,CAaK,MAbLU,UAaK,GAZHC,mBAAA,qFAAwF,G,kBACxFT,mBAAA,CAUKU,SAAA,QAlBjBC,WAAA,CAQ+BR,KAAA,CAAAC,OAAO,EAAfQ,IAAI;yBAAfZ,mBAAA,CAUK;MAVwBD,GAAG,EAAEa,IAAI,CAACC,EAAE;MAAEhB,KAAK,EAAC;QAC/CY,mBAAA,wBAA2B,EAC3BX,mBAAA,CAA4B,cAAAgB,gBAAA,CAAnBF,IAAI,CAACG,IAAI,kBAElBjB,mBAAA,CAKM,cAJJW,mBAAA,2BAA8B,EAC9BX,mBAAA,CAAqF;MAA7ED,KAAK,EAAC,0BAA0B;MAAEmB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,QAAQ,CAACP,IAAI,CAACC,EAAE;OAAG,UAAQ,iBAd5FO,UAAA,GAegBX,mBAAA,qBAAwB,EACxBX,mBAAA,CAAsF;MAA9ED,KAAK,EAAC,uBAAuB;MAAEmB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAG,aAAa,CAACT,IAAI,CAACC,EAAE;OAAG,SAAO,iBAhB7FS,UAAA,E;yDAwBMtB,mBAAA,CAGMU,SAAA;IA3BZX,GAAA;EAAA,IAuBMU,mBAAA,sCAAyC,EACzCX,mBAAA,CAGM,OAHNyB,UAGM,GAFJC,UAAyC,EACzCC,YAAA,CAAyFC,sBAAA;IAA5EC,EAAE,EAAC,WAAW;IAAC9B,KAAK,EAAC;;IA1B1C+B,OAAA,EAAAC,QAAA,CA0B4D,MAAuB,CA1BnFC,gBAAA,CA0B4D,yBAAuB,E;IA1BnFC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}