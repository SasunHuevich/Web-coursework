{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"../../http-common\";\nexport default {\n  name: \"StudentDetails\",\n  props: ['id'],\n  data() {\n    return {\n      student: null,\n      studentGroups: []\n    };\n  },\n  methods: {\n    getStudent() {\n      http.get(\"/student/\" + this.id).then(response => {\n        this.student = response.data;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getStudentGroups() {\n      // получаем список студенческих групп для выпадающего списка\n      http.get(\"/listStudentGroups\").then(response => {\n        this.studentGroups = response.data;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    updateStudent(e) {\n      e.preventDefault(); // запрет отправки формы, так как обрабатывать будем с помощью методов axios\n      var data = {\n        name: this.student.name,\n        student_group_id: this.student.student_group_id\n      };\n      http.post(\"/updateStudent/\" + this.student.id, data).then(() => {\n        // запрос выполнился успешно\n        this.$router.push('/listStudents'); // переходим к списку студентов\n      }).catch(e => {\n        // при выполнении запроса возникли ошибки\n        console.log(e);\n      });\n    },\n    deleteStudent() {\n      http.post(\"/deleteStudent/\" + this.student.id).then(() => {\n        this.$router.push('/listStudents'); // переходим к списку студентов\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  },\n  mounted() {\n    this.getStudent(); // подгрузка данных студента\n    this.getStudentGroups();\n  }\n};","map":{"version":3,"names":["http","name","props","data","student","studentGroups","methods","getStudent","get","id","then","response","catch","e","console","log","getStudentGroups","updateStudent","preventDefault","student_group_id","post","$router","push","deleteStudent","mounted"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\student\\Student.vue"],"sourcesContent":["<template>\r\n    <div class=\"col-md-5\" v-if=\"student\">\r\n        <h4>Данные студента</h4>\r\n        <form @submit=\"updateStudent\">\r\n            <div class=\"form-group mb-3\">\r\n                <input class=\"form-control\" type=\"text\" name=\"name\" id=\"name\" placeholder=\"ФИО\" required v-model=\"student.name\">\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <select class=\"form-select\" required v-model=\"student.student_group_id\">\r\n                    <option value=\"\" disabled selected>Выберите студенческую группу</option>\r\n                    <option v-for=\"studentGroup in studentGroups\" v-bind:key=\"studentGroup.id\" v-bind:value=\"studentGroup.id\">\r\n                        {{studentGroup.name}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <input class=\"btn btn-info\" type=\"submit\" value=\"Обновить\">\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <button class=\"btn btn-danger\" v-on:click=\"deleteStudent()\">Удалить</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div v-else>\r\n        <br>\r\n        <p>Выберите студента</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    export default {\r\n        name: \"StudentDetails\",\r\n        props: ['id'],\r\n        data() {\r\n            return {\r\n                student: null,\r\n                studentGroups: []\r\n            };\r\n        },\r\n        methods: {\r\n            getStudent() {\r\n                http\r\n                    .get(\"/student/\"+ this.id)\r\n                    .then(response => {\r\n                        this.student = response.data;\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            getStudentGroups() { // получаем список студенческих групп для выпадающего списка\r\n                http\r\n                    .get(\"/listStudentGroups\")\r\n                    .then(response => {\r\n                        this.studentGroups = response.data;\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            updateStudent(e) {\r\n                e.preventDefault(); // запрет отправки формы, так как обрабатывать будем с помощью методов axios\r\n                var data = {\r\n                    name: this.student.name,\r\n                    student_group_id: this.student.student_group_id\r\n                };\r\n                http\r\n                    .post(\"/updateStudent/\" + this.student.id, data)\r\n                    .then(() => { // запрос выполнился успешно\r\n                        this.$router.push('/listStudents'); // переходим к списку студентов\r\n                    })\r\n                    .catch(e => { // при выполнении запроса возникли ошибки\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            deleteStudent() {\r\n                http\r\n                    .post(\"/deleteStudent/\" + this.student.id)\r\n                    .then(() => {\r\n                        this.$router.push('/listStudents'); // переходим к списку студентов\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getStudent(); // подгрузка данных студента\r\n            this.getStudentGroups();\r\n        }\r\n    }\r\n</script>"],"mappings":";AA8BI,OAAOA,IAAG,MAAO,mBAAmB;AACpC,eAAe;EACXC,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,IAAI;MACbC,aAAa,EAAE;IACnB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAAA,EAAG;MACTP,IAAG,CACEQ,GAAG,CAAC,WAAW,GAAE,IAAI,CAACC,EAAE,EACxBC,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACP,OAAM,GAAIO,QAAQ,CAACR,IAAI;MAChC,CAAC,EACAS,KAAK,CAACC,CAAA,IAAK;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB,CAAC,CAAC;IACV,CAAC;IACDG,gBAAgBA,CAAA,EAAG;MAAE;MACjBhB,IAAG,CACEQ,GAAG,CAAC,oBAAoB,EACxBE,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACN,aAAY,GAAIM,QAAQ,CAACR,IAAI;MACtC,CAAC,EACAS,KAAK,CAACC,CAAA,IAAK;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB,CAAC,CAAC;IACV,CAAC;IACDI,aAAaA,CAACJ,CAAC,EAAE;MACbA,CAAC,CAACK,cAAc,CAAC,CAAC,EAAE;MACpB,IAAIf,IAAG,GAAI;QACPF,IAAI,EAAE,IAAI,CAACG,OAAO,CAACH,IAAI;QACvBkB,gBAAgB,EAAE,IAAI,CAACf,OAAO,CAACe;MACnC,CAAC;MACDnB,IAAG,CACEoB,IAAI,CAAC,iBAAgB,GAAI,IAAI,CAAChB,OAAO,CAACK,EAAE,EAAEN,IAAI,EAC9CO,IAAI,CAAC,MAAM;QAAE;QACV,IAAI,CAACW,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC,EAAE;MACxC,CAAC,EACAV,KAAK,CAACC,CAAA,IAAK;QAAE;QACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB,CAAC,CAAC;IACV,CAAC;IACDU,aAAaA,CAAA,EAAG;MACZvB,IAAG,CACEoB,IAAI,CAAC,iBAAgB,GAAI,IAAI,CAAChB,OAAO,CAACK,EAAE,EACxCC,IAAI,CAAC,MAAM;QACR,IAAI,CAACW,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC,EAAE;MACxC,CAAC,EACAV,KAAK,CAACC,CAAA,IAAK;QACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB,CAAC,CAAC;IACV;EACJ,CAAC;EACDW,OAAOA,CAAA,EAAG;IACN,IAAI,CAACjB,UAAU,CAAC,CAAC,EAAE;IACnB,IAAI,CAACS,gBAAgB,CAAC,CAAC;EAC3B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}