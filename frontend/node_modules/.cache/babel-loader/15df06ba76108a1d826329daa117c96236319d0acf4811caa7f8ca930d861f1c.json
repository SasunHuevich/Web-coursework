{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Добавление студенческой группы\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0,\n  class: \"col-md-5\"\n};\nconst _hoisted_3 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group mb-3\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"btn btn-success\",\n  type: \"submit\",\n  value: \"Добавить\"\n})], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 1,\n  lass: \"col-md-5\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Вы успешно добавили запись\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"form-group mb-3\"\n};\nconst _hoisted_8 = {\n  class: \"form-group mb-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, !$data.submitted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createCommentVNode(\"В @submit указывается обработчик, который выполнится после нажатия на кнопку \\\"Добавить\\\"\\r\\n            Обработчик addStudentGroup определён в script\"), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = (...args) => $options.addStudentGroup && $options.addStudentGroup(...args))\n  }, [_createCommentVNode(\"v-model - директива для связывания данных с элементами.\\r\\n                Связь происходит при помощи переменных, которые определены в data()\"), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control\",\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    placeholder: \"Название студенческой группы\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.studentGroup.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.studentGroup.name]])]), _hoisted_4], 32 /* NEED_HYDRATION */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\"В v-on:click указывается обработчик, который выполниться после нажатия на кнопку \\\"Добавить новую студенческую группу\\\"\\r\\n                Обработчик newStudentGroup определён в script\"), _createElementVNode(\"button\", {\n    class: \"btn btn-success\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.newStudentGroup && $options.newStudentGroup(...args))\n  }, \"Добавить новую студенческую группу\")]), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_router_link, {\n    class: \"btn btn-light\",\n    to: \"/listStudentGroups\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Вернуться к списку студенческих групп\")]),\n    _: 1 /* STABLE */\n  })])]))]);\n}","map":{"version":3,"names":["_createElementVNode","key","class","type","value","lass","_createElementBlock","_hoisted_1","$data","submitted","_hoisted_2","_createCommentVNode","onSubmit","_cache","args","$options","addStudentGroup","_hoisted_3","name","id","placeholder","required","$event","studentGroup","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","onClick","newStudentGroup","_hoisted_8","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["C:\\Users\\Samedi\\Documents\\SecondProject\\SecondProject\\frontend\\src\\components\\studentGroup\\AddStudentGroup.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h4>Добавление студенческой группы</h4>\r\n        <div class=\"col-md-5\" v-if=\"!submitted\">\r\n            <!--В @submit указывается обработчик, который выполнится после нажатия на кнопку \"Добавить\"\r\n            Обработчик addStudentGroup определён в script-->\r\n            <form @submit=\"addStudentGroup\">\r\n                <!--v-model - директива для связывания данных с элементами.\r\n                Связь происходит при помощи переменных, которые определены в data()-->\r\n                <div class=\"form-group mb-3\"><input class=\"form-control\" type=\"text\" name=\"name\" id=\"name\" placeholder=\"Название студенческой группы\" required v-model=\"studentGroup.name\"></div>\r\n                <div class=\"form-group mb-3\"><input class=\"btn btn-success\" type=\"submit\" value=\"Добавить\"></div>\r\n            </form>\r\n        </div>\r\n        <div lass=\"col-md-5\" v-else>\r\n            <h4>Вы успешно добавили запись</h4>\r\n            <div class=\"form-group mb-3\">\r\n                <!--В v-on:click указывается обработчик, который выполниться после нажатия на кнопку \"Добавить новую студенческую группу\"\r\n                Обработчик newStudentGroup определён в script-->\r\n                <button class=\"btn btn-success\" v-on:click=\"newStudentGroup\">Добавить новую студенческую группу</button>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <router-link class=\"btn btn-light\" to=\"/listStudentGroups\">Вернуться к списку студенческих групп</router-link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"../../http-common\";\r\n    export default {\r\n        name: \"AddStudentGroup\",\r\n        data() {\r\n            return {\r\n                studentGroup: {\r\n                    id: null,\r\n                    name: \"\"\r\n                },\r\n                submitted: false\r\n            };\r\n        },\r\n        methods: {\r\n            addStudentGroup(e) {\r\n                e.preventDefault(); // запрет отправки формы, так как обрабатывать будем с помощью методов axios\r\n                var data = {\r\n                    name: this.studentGroup.name\r\n                };\r\n                // Либо var data = this.user;\r\n                http\r\n                    .post(\"/addStudentGroup\", data)\r\n                    .then(response => { // запрос выполнился успешно\r\n                        this.studentGroup.id = response.data.id;\r\n                    })\r\n                    .catch(e => { // при выполнении запроса возникли ошибки\r\n                        console.log(e);\r\n                    });\r\n\r\n                this.submitted = true;\r\n            },\r\n            newStudentGroup() {\r\n                this.submitted = false;\r\n                this.studentGroup = {\r\n                    id: null,\r\n                    name: \"\"\r\n                };\r\n            }\r\n        }\r\n    }\r\n</script>"],"mappings":";gCAEQA,mBAAA,CAAuC,YAAnC,gCAA8B;;EAF1CC,GAAA;EAGaC,KAAK,EAAC;;;EAMEA,KAAK,EAAC;AAAiB;gCAC5BF,mBAAA,CAAiG;EAA5FE,KAAK,EAAC;AAAiB,I,aAACF,mBAAA,CAA8D;EAAvDE,KAAK,EAAC,iBAAiB;EAACC,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;;;EAVhGH,GAAA;EAaaI,IAAI,EAAC;;gCACNL,mBAAA,CAAmC,YAA/B,4BAA0B;;EACzBE,KAAK,EAAC;AAAiB;;EAKvBA,KAAK,EAAC;AAAiB;;;uBAnBpCI,mBAAA,CAuBM,cAtBFC,UAAuC,E,CACVC,KAAA,CAAAC,SAAS,I,cAAtCH,mBAAA,CASM,OATNI,UASM,GARFC,mBAAA,0JACgD,EAChDX,mBAAA,CAKO;IALAY,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;MAC1BH,mBAAA,kJACsE,EACtEX,mBAAA,CAAiL,OAAjLiB,UAAiL,G,gBAApJjB,mBAAA,CAA8I;IAAvIE,KAAK,EAAC,cAAc;IAACC,IAAI,EAAC,MAAM;IAACe,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,MAAM;IAACC,WAAW,EAAC,8BAA8B;IAACC,QAAQ,EAAR,EAAQ;IAT9J,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IASwKd,KAAA,CAAAe,YAAY,CAACL,IAAI,GAAAI,MAAA;iDAAjBd,KAAA,CAAAe,YAAY,CAACL,IAAI,E,KACzKM,UAAiG,C,+CAGzGlB,mBAAA,CAUM,OAVNmB,UAUM,GATFC,UAAmC,EACnC1B,mBAAA,CAIM,OAJN2B,UAIM,GAHFhB,mBAAA,4LACgD,EAChDX,mBAAA,CAAwG;IAAhGE,KAAK,EAAC,iBAAiB;IAAM0B,OAAK,EAAAf,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAc,eAAA,IAAAd,QAAA,CAAAc,eAAA,IAAAf,IAAA,CAAe;KAAE,oCAAkC,E,GAEnGd,mBAAA,CAEM,OAFN8B,UAEM,GADFC,YAAA,CAA8GC,sBAAA;IAAjG9B,KAAK,EAAC,eAAe;IAAC+B,EAAE,EAAC;;IArBtDC,OAAA,EAAAC,QAAA,CAqB2E,MAAqC,CArBhHC,gBAAA,CAqB2E,uCAAqC,E;IArBhHC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}