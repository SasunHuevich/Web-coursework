{"ast":null,"code":"import http from \"../../http-common\";\nexport default {\n  name: \"AddQuestions\",\n  data() {\n    return {\n      question: {\n        id: null,\n        quiz_id: this.$route.params.quizId,\n        quetion_id: null,\n        text: \"\",\n        correctAnswer: \"\",\n        wrongAnswer1: \"\",\n        wrongAnswer2: \"\",\n        wrongAnswer3: \"\"\n      },\n      questions: [],\n      // массив для хранения списка вопросов\n      showAnswers: {} // объект для отслеживания, какие ответы должны быть показаны\n    };\n  },\n  methods: {\n    // Метод для добавления вопроса\n    addQuestion(e) {\n      e.preventDefault(); // Остановка отправки формы\n      var data = {\n        quiz_id: this.question.quiz_id,\n        quetion_id: this.question.id,\n        question_text: this.question.text,\n        correctAnswer: this.question.correctAnswer,\n        wrongAnswer1: this.question.wrongAnswer1,\n        wrongAnswer2: this.question.wrongAnswer2,\n        wrongAnswer3: this.question.wrongAnswer3\n      };\n\n      // Отправка данных на сервер\n      http.post(\"/addQuestion\", data).then(response => {\n        this.question.id = response.data.id;\n        // Очистка формы для добавления следующего вопроса\n        this.question.text = \"\";\n        this.question.correctAnswer = \"\";\n        this.question.wrongAnswer1 = \"\";\n        this.question.wrongAnswer2 = \"\";\n        this.question.wrongAnswer3 = \"\";\n\n        // После успешного добавления, обновляем список вопросов\n        this.fetchQuestions();\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    // Метод для получения списка вопросов\n    fetchQuestions() {\n      http.get(`/getQuestionsByQuizId/${this.question.quiz_id}`).then(response => {\n        this.questions = response.data; // записываем вопросы в массив questions\n        // Инициализируем showAnswers для каждого вопроса\n        this.questions.forEach(q => {\n          this.$set(this.showAnswers, q.id, false);\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    // Метод для удаления вопроса\n    confirmDelete(questionId) {\n      if (confirm(\"Вы уверены, что хотите удалить этот вопрос?\")) {\n        http.delete(`/deleteQuestion/${questionId}`).then(() => {\n          this.fetchQuestions(); // обновляем список вопросов после удаления\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    },\n    // Метод для переключения показа ответов\n    toggleAnswers(questionId) {\n      this.showAnswers[questionId] = !this.showAnswers[questionId];\n    }\n  },\n  mounted() {\n    // Загружаем список вопросов при монтировании компонента\n    this.fetchQuestions();\n  }\n};","map":{"version":3,"names":["http","name","data","question","id","quiz_id","$route","params","quizId","quetion_id","text","correctAnswer","wrongAnswer1","wrongAnswer2","wrongAnswer3","questions","showAnswers","methods","addQuestion","e","preventDefault","question_text","post","then","response","fetchQuestions","catch","console","log","get","forEach","q","$set","confirmDelete","questionId","confirm","delete","toggleAnswers","mounted"],"sources":["X:\\Downoloads\\SecondProject\\SecondProject\\frontend\\src\\components\\quiz\\AddQuestions.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-5\">\r\n        <!-- Заголовок над карточкой -->\r\n        <h4 class=\"text-center mb-4\">Добавление вопросов к викторине</h4>\r\n\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-md-8\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <form @submit=\"addQuestion\">\r\n                            <!-- Поле для текста вопроса -->\r\n                            <div class=\"form-group mb-3\">\r\n                                <label for=\"questionText\">Текст вопроса:</label>\r\n                                <textarea\r\n                                    class=\"form-control\"\r\n                                    id=\"questionText\"\r\n                                    placeholder=\"Введите вопрос\"\r\n                                    required\r\n                                    v-model=\"question.text\"\r\n                                    rows=\"2\"\r\n                                ></textarea>\r\n                            </div>\r\n\r\n                            <!-- Поле для правильного ответа -->\r\n                            <div class=\"form-group mb-3\">\r\n                                <label for=\"correctAnswer\">Правильный ответ:</label>\r\n                                <input\r\n                                    class=\"form-control\"\r\n                                    type=\"text\"\r\n                                    id=\"correctAnswer\"\r\n                                    placeholder=\"Введите правильный ответ\"\r\n                                    required\r\n                                    v-model=\"question.correctAnswer\"\r\n                                />\r\n                            </div>\r\n\r\n                            <!-- Поля для неправильных ответов -->\r\n                            <div class=\"form-group mb-3\">\r\n                                <label>Неправильные ответы:</label>\r\n                                <input\r\n                                    class=\"form-control mb-2\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Неправильный ответ 1\"\r\n                                    required\r\n                                    v-model=\"question.wrongAnswer1\"\r\n                                />\r\n                                <input\r\n                                    class=\"form-control mb-2\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Неправильный ответ 2\"\r\n                                    required\r\n                                    v-model=\"question.wrongAnswer2\"\r\n                                />\r\n                                <input\r\n                                    class=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Неправильный ответ 3\"\r\n                                    required\r\n                                    v-model=\"question.wrongAnswer3\"\r\n                                />\r\n                            </div>\r\n\r\n                            <!-- Кнопка добавления вопроса -->\r\n                            <div class=\"form-group mb-3\">\r\n                                <input class=\"btn btn-success w-100\" type=\"submit\" value=\"Добавить вопрос\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Список добавленных вопросов -->\r\n                <div v-if=\"questions.length\" class=\"mt-4\">\r\n                    <h5>Список добавленных вопросов:</h5>\r\n                    <ul class=\"list-group\">\r\n                        <li\r\n                            v-for=\"q in questions\"\r\n                            :key=\"q.id\"\r\n                            class=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                        >\r\n                            {{ q.question_text }}\r\n                            <div>\r\n                                <button class=\"btn btn-sm btn-danger\" @click=\"confirmDelete(q.id)\">Удалить</button>\r\n                                <button\r\n                                    class=\"btn btn-sm btn-info ms-2\"\r\n                                    @click=\"toggleAnswers(q.id)\"\r\n                                >\r\n                                    {{ showAnswers[q.id] ? \"Скрыть ответы\" : \"Показать ответы\" }}\r\n                                </button>\r\n                            </div>\r\n\r\n                            <!-- Отображение ответов, если они должны быть показаны -->\r\n                            <div v-if=\"showAnswers[q.id]\" class=\"mt-2\">\r\n                                <p><strong>Правильный ответ:</strong> {{ q.correctAnswer }}</p>\r\n                                <p><strong>Неправильные ответы:</strong></p>\r\n                                <ul>\r\n                                    <li>{{ q.wrongAnswer1 }}</li>\r\n                                    <li>{{ q.wrongAnswer2 }}</li>\r\n                                    <li>{{ q.wrongAnswer3 }}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"../../http-common\";\r\n\r\nexport default {\r\n    name: \"AddQuestions\",\r\n    data() {\r\n        return {\r\n            question: {\r\n                id: null,\r\n                quiz_id: this.$route.params.quizId,\r\n                quetion_id: null,\r\n                text: \"\",\r\n                correctAnswer: \"\",\r\n                wrongAnswer1: \"\",\r\n                wrongAnswer2: \"\",\r\n                wrongAnswer3: \"\"\r\n            },\r\n            questions: [], // массив для хранения списка вопросов\r\n            showAnswers: {} // объект для отслеживания, какие ответы должны быть показаны\r\n        };\r\n    },\r\n    methods: {\r\n        // Метод для добавления вопроса\r\n        addQuestion(e) {\r\n            e.preventDefault(); // Остановка отправки формы\r\n            var data = {\r\n                quiz_id: this.question.quiz_id,\r\n                quetion_id: this.question.id,\r\n                question_text: this.question.text,\r\n                correctAnswer: this.question.correctAnswer,\r\n                wrongAnswer1: this.question.wrongAnswer1,\r\n                wrongAnswer2: this.question.wrongAnswer2,\r\n                wrongAnswer3: this.question.wrongAnswer3\r\n            };\r\n\r\n            // Отправка данных на сервер\r\n            http\r\n                .post(\"/addQuestion\", data)\r\n                .then(response => {\r\n                    this.question.id = response.data.id;\r\n                    // Очистка формы для добавления следующего вопроса\r\n                    this.question.text = \"\";\r\n                    this.question.correctAnswer = \"\";\r\n                    this.question.wrongAnswer1 = \"\";\r\n                    this.question.wrongAnswer2 = \"\";\r\n                    this.question.wrongAnswer3 = \"\";\r\n\r\n                    // После успешного добавления, обновляем список вопросов\r\n                    this.fetchQuestions();\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        },\r\n\r\n        // Метод для получения списка вопросов\r\n        fetchQuestions() {\r\n            http\r\n                .get(`/getQuestionsByQuizId/${this.question.quiz_id}`)\r\n                .then(response => {\r\n                    this.questions = response.data; // записываем вопросы в массив questions\r\n                    // Инициализируем showAnswers для каждого вопроса\r\n                    this.questions.forEach(q => {\r\n                        this.$set(this.showAnswers, q.id, false);\r\n                    });\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        },\r\n\r\n        // Метод для удаления вопроса\r\n        confirmDelete(questionId) {\r\n            if (confirm(\"Вы уверены, что хотите удалить этот вопрос?\")) {\r\n                http\r\n                    .delete(`/deleteQuestion/${questionId}`)\r\n                    .then(() => {\r\n                        this.fetchQuestions(); // обновляем список вопросов после удаления\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            }\r\n        },\r\n\r\n        // Метод для переключения показа ответов\r\n        toggleAnswers(questionId) {\r\n            this.showAnswers[questionId] = !this.showAnswers[questionId];\r\n        }\r\n    },\r\n    mounted() {\r\n        // Загружаем список вопросов при монтировании компонента\r\n        this.fetchQuestions();\r\n    }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}